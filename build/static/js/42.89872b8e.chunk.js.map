{"version":3,"sources":["views/base/Location/Location.js"],"names":["cookies","Cookies","console","log","get","Classes","useState","Policy","setPolicy","useEffect","axios","BASE_URL","then","res","data","catch","err","require","policydetail","setpolicydetail","a","location","document","getElementById","value","post","gym_location","gym","status","window","reload","error","alert","uuid","patch","delete","primary","setPrimary","success","setSuccess","className","onClick","class","xs","lg","map","store","color","getuuid","type","deletePolicy","show","onClose","size","closeButton","for","id","name","defaultValue"],"mappings":"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","file":"static/js/42.89872b8e.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport $ from 'jquery';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CContainer,\r\n  CJumbotron,\r\n  CRow,\r\n  CEmbed,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownDivider,\r\n  CDropdownHeader,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CHeaderNavLink,\r\n  CEmbedItem\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\nimport Cookies from 'universal-cookie';\r\nimport BASE_URL from 'src/views/base';\r\n\r\n\r\nconst cookies = new Cookies();\r\nconsole.log(cookies.get('gym_uuid'))\r\n\r\n\r\nconst Classes = () => {\r\n\r\nconst [Policy, setPolicy] = useState([])\r\n\r\n\r\nuseEffect(() => {\r\naxios\r\n    .get(BASE_URL + 'gymprofile/location/?gym=' + cookies.get('gym_uuid'))\r\n    .then(res => {\r\n    console.log(res)\r\n    setPolicy(res.data)\r\n    })\r\n    .catch(err => {\r\n    console.log(err)\r\n    })\r\n}, [])\r\n\r\nconst axios = require('axios');\r\n\r\nconst [policydetail, setpolicydetail] = useState([\"ffgyu\",\"fghj\"])\r\n\r\nfunction Clicker(uuid) {\r\n    // alert(uuid);\r\n    setSuccess(!success);\r\n    //  debugger\r\n    axios\r\n      .get(BASE_URL + 'gymprofile/location/' + uuid)\r\n      .then(getuuid => {\r\n        console.log(getuuid);\r\n        setpolicydetail(getuuid.data);\r\n      })\r\n\r\n  }\r\n\r\n\r\n\r\n\r\nasync function NewPolicy() {\r\n    // setSuccess(false);\r\n   \r\n    //  debugger\r\n    // var form = document.forms[\"regform\"][\"email\"].value;   \r\n    var location = document.getElementById(\"location\").value;\r\n    // var policy_text = document.getElementById(\"policy_text\").value;\r\n    \r\n    {  \r\n       \r\n        console.log('Trying to send request');\r\n        \r\n        try {\r\n            console.log('Trying');\r\n            let res = await axios.post(BASE_URL + 'gymprofile/location/', {\r\n                gym_location:location,\r\n                // policy_text:policy_text,\r\n                gym: cookies.get('gym_uuid'),\r\n            });\r\n            if (res.status === 200) {\r\n                //  debugger\r\n                // test for status you want, etc\r\n                console.log(res.status);\r\n                console.log(res.data);\r\n                // alert(res.data.message);\r\n  \r\n                window.location.reload();\r\n               \r\n  \r\n            }\r\n            //  debugger\r\n            // Don't forget to return something\r\n            return res.data\r\n        }\r\n        catch (err) {\r\n            console.error('Signup Failed , Please try again.');\r\n            window.location.reload()\r\n            alert(err);\r\n        }\r\n    }\r\n}\r\n\r\nasync function Updatepolicy() {\r\n    // setSuccess(false);\r\n   \r\n    //  debugger\r\n    // var form = document.forms[\"regform\"][\"email\"].value;   \r\n    var location = document.getElementById(\"update_location\").value;\r\n    // var policy_text = document.getElementById(\"update_policy_text\").value;\r\n    var uuid = document.getElementById(\"update_uuid\").value;\r\n    \r\n    \r\n    {  \r\n       \r\n        console.log('Trying to send request');\r\n        \r\n        try {\r\n            let loader = `<div><div class=\"loader centered\"/></div>`;\r\n            // document.getElementById('reg').innerHTML = loader;\r\n            console.log('Trying');\r\n            let res = await axios.patch(BASE_URL + 'gymprofile/location/' + uuid +'/', {\r\n            \r\n                gym_location:location,\r\n                // policy_text:policy_text,\r\n                uuid:uuid,\r\n            });\r\n            if (res.status === 200) {\r\n                //  debugger\r\n                // test for status you want, etc\r\n                console.log(res.status);\r\n                console.log(res.data);\r\n                // alert(res.data.message);\r\n  \r\n                window.location.reload();\r\n            }\r\n            //  debugger\r\n            // Don't forget to return something\r\n            return res.data\r\n        }\r\n        catch (err) {\r\n            console.error('Signup Failed , Please try again.');\r\n            window.location.reload();\r\n            alert(err);\r\n        }\r\n    }\r\n}\r\n\r\nasync function deletePolicy(uuid) {\r\n    // setSuccess(false);\r\n   console.log(uuid)\r\n    \r\n    {  \r\n       \r\n        console.log('Trying to send request');\r\n        \r\n        try {\r\n            let loader = `<div><div class=\"loader centered\"/></div>`;\r\n            // document.getElementById('reg').innerHTML = loader;\r\n            console.log('Trying');\r\n            let res = await axios.delete(BASE_URL + 'gymprofile/location/' + uuid +'/', {\r\n            \r\n                uuid:uuid\r\n            });\r\n            if (res.status === 200) {\r\n                //  debugger\r\n                // test for status you want, etc\r\n                console.log(res.status);\r\n                console.log(res.data);\r\n                // alert(res.data.message);\r\n  \r\n                window.location.reload();\r\n            }\r\n            //  debugger\r\n            // Don't forget to return something\r\n            return res.data\r\n        }\r\n        catch (err) {\r\n            console.error('Signup Failed , Please try again.');\r\n            window.location.reload();\r\n            alert(err);\r\n        }\r\n    }\r\n}\r\n\r\n\r\nconst [modal, setModal] = useState(false)\r\nconst [large, setLarge] = useState(false)\r\nconst [small, setSmall] = useState(false)\r\nconst [primary, setPrimary] = useState(false)\r\nconst [success, setSuccess] = useState(false)\r\nconst [warning, setWarning] = useState(false)\r\nconst [danger, setDanger] = useState(false)\r\nconst [info, setInfo] = useState(false)\r\n\r\nconst [getclasses, setgetclasses] = useState([])\r\n\r\n\r\n\r\n\r\n  return (\r\n    <>\r\n   \r\n        <CRow>\r\n      <div className=\"col-md-12\">\r\n              <div className=\"manage_top_btn\">\r\n              <div className=\"manage-btn-left\">\r\n\r\n                \r\n                <CHeaderNavLink>\r\n                <button className=\"mn_btn_1 mr-1\" onClick={() => setPrimary(!primary)}> <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i> Add New Location </button>\r\n                </CHeaderNavLink>\r\n\r\n               \r\n                </div> \r\n                   {/* <div class=\"btn-group group-btn-main\">\r\n                   \r\n                   <button type=\"button\" class=\"btn btn-primary\">All</button>\r\n                    <button type=\"button\" class=\"btn btn-success\">Adult</button>\r\n                    <button type=\"button\" class=\"btn btn-warning\">Teen</button>\r\n                    <button type=\"button\" class=\"btn btn-danger\">Children</button>\r\n                \r\n                </div> */}\r\n\r\n              </div>\r\n              \r\n          </div>\r\n        <CCol xs=\"12\" lg=\"12\">\r\n          <CCard>\r\n         \r\n          <div className=\"col-md-12\">\r\n          <div className=\"manage-table-main\">\r\n                <table class=\"table\">\r\n            <thead>\r\n            <tr>\r\n                <th>Location</th>\r\n                <th>Action</th>\r\n              \r\n            </tr>\r\n            </thead>\r\n            {Policy.map(store => (\r\n            <tbody>\r\n            <tr>\r\n                <td>{store.gym_location}</td>\r\n                <td>\r\n                <CButton color=\"primary\" onClick={() => Clicker(store.uuid)}>Manage</CButton>{' '}\r\n                <button type=\"button\" class=\"btn btn-danger\"  onClick={() => deletePolicy(store.uuid)}><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button> \r\n                </td>\r\n            </tr>\r\n             </tbody>))}\r\n        </table>\r\n\r\n    </div>\r\n        </div>\r\n\r\n        \r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      <CModal \r\n        show={primary} \r\n        onClose={setPrimary}\r\n        size=\"lg\"\r\n        >\r\n        <CModalHeader closeButton className=\"add-user-modal\">\r\n        <CModalTitle>Add New Location</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n        <div class=\"col-md-12\">\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"policy_title\">Policy title<span class=\"text-danger\"> * </span></label>\r\n                        <input type=\"text\" id=\"location\" name=\"location\" class=\"form-control\" />\r\n                </div>\r\n                </div>\r\n\r\n                \r\n               </div>\r\n\r\n        </div>\r\n        \r\n        </CModalBody>\r\n        <CModalFooter>\r\n            <div className=\"col-md-12 text-center\">\r\n            <CButton color=\"primary\" onClick={NewPolicy}>Save</CButton>{' '}\r\n            <CButton \r\n            color=\"secondary\" \r\n            onClick={() => setPrimary(false)}\r\n            >Close</CButton>\r\n            </div>\r\n           \r\n        </CModalFooter>\r\n        </CModal>\r\n\r\n        <CModal \r\n        show={success} \r\n        onClose={setSuccess}\r\n        size=\"lg\"\r\n        >\r\n        <CModalHeader closeButton className=\"add-user-modal\">\r\n        <CModalTitle>Update Policy</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n        <div class=\"card-body\">\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"update_location\">Policy title<span class=\"text-danger\"> * </span></label>\r\n                        <input type=\"text\" id=\"update_location\" defaultValue ={policydetail.gym_location} name=\"update_location\" class=\"form-control\" />\r\n                        <input type='hidden' id='update_uuid' name='update_uuid' value={policydetail.uuid}></input>\r\n                </div>\r\n                </div>\r\n\r\n        </div>\r\n\r\n        </div>\r\n        \r\n        </CModalBody>\r\n        <CModalFooter>\r\n            <CButton color=\"primary\" onClick={Updatepolicy} >Save</CButton>{' '}\r\n            <CButton \r\n            color=\"secondary\" \r\n            onClick={() => setSuccess(false)}\r\n            >Close</CButton>\r\n        </CModalFooter>\r\n        </CModal>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Classes\r\n"],"sourceRoot":""}