{"version":3,"sources":["views/base/Reports/Reports.js"],"names":["cookies","Cookies","console","log","get","Classes","monthNames","current","Date","last_month","getMonth","sec_las_month","third_last_month","axios","require","useState","getreports","setreports","a","start_date","document","getElementById","value","end_date","post","BASE_URL","gym_id","res","status","data","error","window","location","reload","alert","QuarterlyReports","month","includes","className","id","type","color","onClick","xs","lg","class","total_sales","transactions","user_count","profit","CSVExport","href"],"mappings":"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","file":"static/js/51.06f5eff9.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport $ from 'jquery';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CContainer,\r\n  CJumbotron,\r\n  CRow,\r\n  CEmbed,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownDivider,\r\n  CDropdownHeader,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CHeaderNavLink,\r\n  CEmbedItem\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\nimport Cookies from 'universal-cookie';\r\nimport BASE_URL from 'src/views/base';\r\n\r\n\r\nconst cookies = new Cookies();\r\nconsole.log(cookies.get('gym_uuid'))\r\n\r\n\r\nconst Classes = () => {\r\n\r\n  var monthNames = [\"Jan\", \"Feb\", \"Mar\", \"Apr\", \"May\", \"Jun\",\r\n  \"Jul\", \"Aug\", \"Sept\", \"Oct\", \"Nov\", \"Dec\"];\r\n\r\n\r\n  const current = new Date();\r\n\r\nvar last_month = monthNames[current.getMonth()-1]\r\nvar sec_las_month = monthNames[current.getMonth()-2]\r\nvar third_last_month = monthNames[current.getMonth()-3]\r\n\r\n// console.log(lastmonth)\r\nconst axios = require('axios');\r\n\r\nconst [getreports, setreports] = useState([])\r\n\r\n\r\nasync function Reports() {\r\n    // setSuccess(false);\r\n   \r\n    //  debugger\r\n    // var form = document.forms[\"regform\"][\"email\"].value;   \r\n    var start_date = document.getElementById(\"start_date\").value;\r\n    var end_date = document.getElementById(\"end_date\").value;\r\n    \r\n    {  \r\n       \r\n        console.log('Trying to send request');\r\n        \r\n        try {\r\n            console.log('Trying');\r\n            let res = await axios.post(BASE_URL + 'gymprofile/dash/', {\r\n                start_date:start_date,\r\n                end_date:end_date,\r\n                gym_id: cookies.get('gym_uuid'),\r\n            });\r\n            if (res.status === 200) {\r\n                //  debugger\r\n                // test for status you want, etc\r\n                console.log(res.data.data);\r\n                setreports(res.data.data);\r\n                // alert(res.data.message);\r\n             \r\n            }\r\n            //  debugger\r\n            // Don't forget to return something\r\n            return res.data\r\n        }\r\n        catch (err) {\r\n            console.error('Signup Failed , Please try again.');\r\n            window.location.reload()\r\n            alert(err);\r\n        }\r\n    }\r\n}\r\n\r\nasync function QuarterlyReports(month) {\r\n  // setSuccess(false);\r\n \r\n  //  debugger\r\n  // var form = document.forms[\"regform\"][\"email\"].value;   \r\n  // var start_date = document.getElementById(\"start_date\").value;\r\n  // var end_date = document.getElementById(\"end_date\").value;\r\n  \r\n  {\r\n     \r\n      console.log('Trying to send request');\r\n      \r\n      try {\r\n          console.log('Trying');\r\n          let res = await axios.post(BASE_URL + 'gymprofile/dash/', {\r\n            month:month,\r\n            gym_id: cookies.get('gym_uuid'),\r\n          });\r\n          if (res.status === 200) {\r\n            //  debugger\r\n            // test for status you want, etc\r\n            console.log(res.data.data);\r\n            setreports(res.data.data);\r\n            // alert(res.data.message);\r\n           \r\n          }\r\n          //  debugger\r\n          // Don't forget to return something\r\n          return res.data\r\n      }\r\n      catch (err) {\r\n          console.error('Signup Failed , Please try again.');\r\n          window.location.reload()\r\n          alert(err);\r\n      }\r\n  }\r\n}\r\n\r\n\r\nasync function CSVExport(data){\r\n  //  debugger\r\n\r\n  {\r\n     \r\n    console.log('Trying to send request');\r\n    \r\n    try {\r\n        console.log('Trying');\r\n        let res = await axios.post(BASE_URL + 'gymprofile/reports/csv/', {\r\n          data:data,\r\n          gym_id: cookies.get('gym_uuid'),\r\n        });\r\n        if (res.status === 200) {\r\n          //  debugger\r\n          // test for status you want, etc\r\n          console.log(res.data.data);\r\n          setreports(res.data.data);\r\n          // alert(res.data.message);\r\n         \r\n        }\r\n        //  debugger\r\n        // Don't forget to return something\r\n        return res.data\r\n    }\r\n    catch (err) {\r\n        console.error('Signup Failed , Please try again.');\r\n        window.location.reload()\r\n        alert(err);\r\n    }\r\n}\r\n}\r\n\r\n\r\n\r\nconst [modal, setModal] = useState(false)\r\nconst [large, setLarge] = useState(false)\r\nconst [small, setSmall] = useState(false)\r\nconst [primary, setPrimary] = useState(false)\r\nconst [success, setSuccess] = useState(false)\r\nconst [warning, setWarning] = useState(false)\r\nconst [danger, setDanger] = useState(false)\r\nconst [info, setInfo] = useState(false)\r\n\r\nconst [getclasses, setgetclasses] = useState([])\r\n\r\n\r\nvar perm = cookies.get('perms')\r\n\r\n  if (perm.includes('Reports')){\r\n\r\n  return (\r\n    <>\r\n   \r\n        <CRow>\r\n      <div className=\"col-md-12\">\r\n              <div className=\"manage_top_btn rports-form-top\">\r\n          \r\n\r\n                \r\n              <CRow>\r\n                <div className=\"col-md-5\">\r\n                <div className=\"form-group\">\r\n              <label>Start date :</label> \r\n              <input className=\"form-control\" id='start_date' type='date'></input>\r\n              </div>\r\n                </div>\r\n              <div className=\"col-md-5\">\r\n                <div className=\"form-group\">\r\n                <label>End date :</label> \r\n                <input className=\"form-control\" id='end_date' type='date'></input>\r\n                  </div>\r\n              </div>\r\n            \r\n\r\n              <div className=\"col-md-2\">\r\n                <CButton color=\"primary bt-mr\" onClick={Reports}>Generate Reports</CButton>{' '}\r\n              </div>\r\n\r\n\r\n              <CCol xs=\"12\" lg=\"12\">\r\n                    <div className=\"reports-filter-btn\">\r\n                    \r\n                    <CButton color=\"primary\" onClick={()=>QuarterlyReports('prev')} > {last_month}</CButton>\r\n                    <CButton color=\"primary\" onClick={()=>QuarterlyReports('2prev')} > {sec_las_month}</CButton>\r\n                    <CButton color=\"primary\" onClick={()=>QuarterlyReports('3prev')} > {third_last_month}</CButton>\r\n                    </div>\r\n                </CCol> \r\n              \r\n                </CRow>\r\n\r\n                <CRow>\r\n\r\n\r\n\r\n                </CRow>  \r\n\r\n              </div>\r\n              \r\n          </div>\r\n        <CCol xs=\"12\" lg=\"12\">\r\n          <CCard>\r\n         \r\n          <div className=\"col-md-12\">\r\n              \r\n          <div className=\"manage-table-main\">\r\n                <table class=\"table\">\r\n            <thead>\r\n          \r\n            <tr>\r\n                <th>Total Revenue</th>\r\n                <th>Expenses</th>\r\n                <th>New user count</th>\r\n                <th>Profit/Loss</th>\r\n                <th>Action</th>\r\n              \r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            <tr>\r\n                {getreports.total_sales?<td>{getreports.total_sales}</td>:<td>0</td>}\r\n                {getreports.transactions?<td>{getreports.transactions}</td>:<td>0</td>}\r\n                {getreports.user_count?<td>{getreports.user_count}</td>:<td>0</td>}\r\n                {getreports.profit?<td>{getreports.profit}</td>:<td>0</td>}\r\n                <CButton color=\"primary\" onClick = {()=>CSVExport(getreports)}>Export to CSV</CButton>{' '}\r\n\r\n             \r\n            </tr>\r\n             </tbody>\r\n        </table>\r\n\r\n    </div>\r\n        </div>\r\n\r\n        \r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n      \r\n\r\n    </>\r\n  )}\r\n  else{\r\n    return window.location.href='#/dashboard'\r\n  }\r\n}\r\n\r\nexport default Classes\r\n"],"sourceRoot":""}