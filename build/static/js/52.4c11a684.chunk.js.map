{"version":3,"sources":["views/base/Roles/Roles.js"],"names":["cookies","Cookies","Expenses","useState","primary","setPrimary","success","setSuccess","getroles","setroles","axios","require","useEffect","get","BASE_URL","then","res","console","log","data","catch","err","userdetail","a","url","role","document","getElementById","value","config","method","re","window","location","reload","uuid","first_name","last_name","email","dob","gender","profile_picture","querySelector","FormData","append","files","headers","_boundary","JSON","stringify","status","alert","error","delete","className","onClick","class","href","xs","lg","map","store","user_roles","type","DeleteUser","show","onClose","size","closeButton","for","id","name","color","Addrole","defaultValue","for_role","md","UpdateUser"],"mappings":"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","file":"static/js/52.4c11a684.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CContainer,\r\n  CJumbotron,\r\n  CRow,\r\n  CEmbed,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownDivider,\r\n  CDropdownHeader,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CEmbedItem,\r\n  CFormGroup,\r\n  CFormText,\r\n  CInputCheckbox,\r\n  CLabel,\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\nimport BASE_URL from 'src/views/base'\r\nimport Cookies from 'universal-cookie';\r\nimport $ from \"jquery\";\r\n\r\n\r\nconst cookies = new Cookies();\r\n//  debugger\r\n\r\n\r\nconst Expenses = () => {\r\n\r\n        \r\nconst [modal, setModal] = useState(false)\r\nconst [large, setLarge] = useState(false)\r\nconst [small, setSmall] = useState(false)\r\nconst [primary, setPrimary] = useState(false)\r\nconst [success, setSuccess] = useState(false)\r\nconst [warning, setWarning] = useState(false)\r\nconst [danger, setDanger] = useState(false)\r\nconst [info, setInfo] = useState(false)\r\n\r\n\r\nconst [getroles,setroles] = useState([])\r\n\r\nconst axios = require('axios');\r\n\r\nuseEffect(() => {\r\n  axios\r\n  .get(BASE_URL + 'gymprofile/gymroles/?gym='+cookies.get('gym_uuid'))\r\n  .then(res => {\r\n      console.log(res.data)\r\n      setroles(res.data)\r\n  })\r\n  .catch(err => {\r\n      console.log(err)\r\n  })\r\n}, [])\r\n\r\n\r\n  const [userdetail, setuserdetail] = useState([])\r\n  const [permisions,setupdatepermissions] = useState([])\r\n  function Clicker(uuid) {\r\n      // alert(uuid);\r\n      setSuccess(!success);\r\n      //  debugger\r\n      axios\r\n        .get(BASE_URL + 'user/roles/permissions/' + uuid)\r\n        .then(getuuid => {\r\n          console.log(getuuid.data.permissions_list);\r\n          setuserdetail(getuuid.data);\r\n          setupdatepermissions(getuuid.data.permissions_list)\r\n        })\r\n  \r\n    }\r\n\r\n    async function Addrole(){\r\n      //  debugger\r\n      var url = BASE_URL+'gymprofile/gymroles/';      \r\n      var role = document.getElementById('role').value;\r\n  \r\n      var config={\r\n        url:url,\r\n        method:\"post\",\r\n        data:{\"user_roles\":role,'gym':cookies.get('gym_uuid')}\r\n      };\r\n      axios(config)\r\n      .then(re=>{\r\n          window.location.reload();\r\n      }).catch(err=>{\r\n          // alert(\"Error Please Try Again\");;\r\n      })\r\n    }\r\n\r\nasync function UpdateUser(uuid) {\r\n    // setSuccess(false);\r\n   \r\n    //  debugger\r\n    // var form = document.forms[\"regform\"][\"email\"].value;   \r\n    var role = document.getElementById(\"update_role\").value;\r\n    var first_name = document.getElementById(\"update_first_name\").value;\r\n    var last_name = document.getElementById(\"update_last_name\").value;\r\n    var email = document.getElementById(\"update_email\").value;\r\n    var dob = document.getElementById(\"update_dob\").value;\r\n    var gender = document.getElementById(\"update_gender\").value;\r\n    // var password = document.getElementById(\"update_password\").value;\r\n    var profile_picture = document.querySelector(\"#update_profile_picture\");\r\n    // var password1 = document.getElementById(\"update_confirm_password\").value;\r\n    // var password = '1234';\r\n    // var password1 = '1234';\r\n    // console.log(password1);\r\n    // console.log(password);\r\n\r\n     {  \r\n       \r\n        console.log('Trying to send request');\r\n        \r\n        var data = new FormData();\r\n\r\n\r\n        data.append(\"user_role\", role);\r\n        data.append(\"first_name\", first_name);\r\n        data.append(\"last_name\", last_name);\r\n        data.append(\"email\", email);\r\n        data.append(\"gender\", gender);\r\n        // data.append(\"password\", password);       \r\n        data.append(\"dob\", dob);\r\n        data.append(\"profile_picture\", profile_picture.files[0]);\r\n    \r\n        try {\r\n          console.log('Trying')\r\n    \r\n          var config = {\r\n            method: \"patch\",\r\n            url: BASE_URL + \"user/\" + uuid + '/',\r\n            headers: {\r\n              \"content-type\": `multipart/form-data; boundary=${data._boundary}`,\r\n            },\r\n            data: data,\r\n          };\r\n    \r\n          await axios(config)\r\n            .then(function (res) {\r\n    \r\n              console.log(JSON.stringify(res.data));\r\n    \r\n              if (res.status === 200) {\r\n    \r\n                if (res.status === 200) {\r\n                  window.location.reload();\r\n    \r\n                }\r\n                else {\r\n    \r\n                  alert(\"BAD REQUEST\");\r\n                }\r\n              }\r\n    \r\n              return res.data\r\n            })\r\n    \r\n    \r\n        }\r\n        catch (err) {\r\n    \r\n          console.error(err);\r\n    \r\n        }\r\n    }\r\n}\r\n\r\nasync function DeleteUser(uuid) {\r\n      var url = BASE_URL+'gymprofile/gymroles/'+uuid;\r\n      const x = await axios.delete(url);\r\n  \r\n        if (x.status === 200) {\r\n          window.location.reload()\r\n        } else {\r\n          // alert(\"Error\");\r\n        }\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n   \r\n        <CRow>\r\n      <div className=\"col-md-12\">\r\n              <div className=\"manage_top_btn\">\r\n              <div className=\"manage-btn-left\">\r\n                  <button className=\"mn_btn_1 mr-1\" onClick={() => setPrimary(!primary)}> <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i> Add Role </button>\r\n                  <button className=\"mn_btn_1 mr-1\" onClick={() =>window.location.href = '#/base/permissions'}> <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i> Add Permission </button>\r\n                </div> \r\n                \r\n\r\n              </div>\r\n              \r\n          </div>\r\n        <CCol xs=\"12\" lg=\"12\">\r\n          <CCard>\r\n         \r\n          <div className=\"col-md-12\">\r\n          <div className=\"manage-table-main\">\r\n                <table class=\"table\">\r\n            <thead>\r\n            <tr>\r\n                \r\n                <th>Role</th>\r\n                {/* <th>Permissions</th> */}\r\n                {/* <th  class=\"text-center\">Frequency</th> */}\r\n                {/* <th  class=\"text-center\">Status</th> */}\r\n                <th>Action</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {getroles.map(store => (\r\n            <tr>\r\n\r\n                <td>{store.user_roles}</td>\r\n              \r\n                <td>\r\n                {/* <CButton color=\"primary\" onClick={() => Clicker(store.uuid)}>Manage</CButton>{' '} */}\r\n                <button type=\"button\" class=\"btn btn-danger\" onClick={() => DeleteUser(store.uuid)}><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button> \r\n                </td>\r\n            </tr>\r\n            ))}\r\n\r\n        </tbody>\r\n        </table>\r\n\r\n    </div>\r\n        </div>\r\n\r\n        \r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n    <CModal \r\n        show={primary} \r\n        onClose={setPrimary}\r\n        size=\"lg\"\r\n        >\r\n        <CModalHeader closeButton className=\"add-user-modal\">\r\n        <CModalTitle>Add User</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n        <div class=\"col-md-12\">\r\n        <div class=\"row\">\r\n\r\n          <div class=\"col-sm-6\" >\r\n              <div class=\"form-group\">\r\n                  <label class=\"form-label\" for=\"expense_name\">Role</label>\r\n                  <input id='role' name='role' className='form-control'></input>\r\n          </div>\r\n          </div>\r\n\r\n            \r\n        </div>\r\n \r\n</div>\r\n        \r\n        </CModalBody>\r\n        <CModalFooter>\r\n            <div className=\"col-md-12 text-center\">\r\n            <CButton color=\"primary\" onClick={()=> Addrole()} >Save</CButton>{' '}\r\n            <CButton \r\n            color=\"secondary\" \r\n            onClick={() => setPrimary(false)}\r\n            >Close</CButton>\r\n            </div>\r\n           \r\n        </CModalFooter>\r\n    </CModal>\r\n\r\n    <CModal \r\n        show={success} \r\n        onClose={setSuccess}\r\n        size=\"lg\"\r\n        >\r\n        <CModalHeader closeButton className=\"add-user-modal\">\r\n        <CModalTitle>Update User</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n        <div class=\"card-body\">\r\n    \r\n        <div class=\"row\">\r\n\r\n                <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"expense_name\">Role</label>\r\n                        <input type=\"text\" defaultValue={userdetail.for_role} id=\"update_first_name\"  name=\"first_name\" class=\"form-control\"  />\r\n                </div>\r\n                </div>\r\n\r\n                  <CCol md=\"12\">\r\n                    <CLabel className=\"mr-0\">Permissions</CLabel>\r\n                  </CCol>\r\n                  <CCol md=\"12\">\r\n                  \r\n                  {/* {PermissionsList.map((perm) => {\r\n            \r\n                  return <div className=\"col-xs-4\">\r\n                  <label className=\"container_signup\">\r\n                    {perm.title}\r\n                    {permisions.includes(perm.title)?<input id={perm.id} value={perm.title} checked type=\"checkbox\" />:<input id={perm.id} value={perm.title} type=\"checkbox\" />}\r\n                    <span className=\"checkmark\"></span>\r\n                  </label>\r\n                </div>\r\n                //  return <CFormGroup variant=\"custom-checkbox\" inline>\r\n                //   {permisions.includes(perm.title)?<CInputCheckbox custom id={perm.id} name={perm.title} checked value={perm.title} />:<CInputCheckbox custom id={perm.id} name={perm.title} value={perm.id} onClick={()=>document.getElementById(perm.id).checked==true}/>}\r\n                //   <CLabel variant=\"custom-checkbox\" htmlFor=\"inline-checkbox2\">{perm.title}</CLabel>\r\n                // </CFormGroup>\r\n              \r\n             })}  */}\r\n                  </CCol>\r\n              \r\n\r\n                 \r\n        </div>\r\n        </div>\r\n        \r\n        </CModalBody>\r\n        <CModalFooter>\r\n            <CButton color=\"primary\" onClick = {()=>UpdateUser()}>Save</CButton>{' '}\r\n            <CButton \r\n            color=\"secondary\" \r\n            onClick={() => setSuccess(false)}\r\n            >Close</CButton>\r\n        </CModalFooter>\r\n        </CModal>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Expenses\r\n"],"sourceRoot":""}