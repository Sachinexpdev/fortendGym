{"version":3,"sources":["views/base/Instructor/Instructor.js"],"names":["cookies","Cookies","console","log","get","Expenses","useState","primary","setPrimary","success","setSuccess","getinstructor","setgetinstructor","getuser","setuser","axios","require","useEffect","BASE_URL","then","res","data","catch","err","getinstructordetail","setinstructordetail","a","document","getElementById","value","post","gym_id","start_date","end_date","status","window","location","reload","error","alert","instructor_info","specialization","gym","uuid","patch","instructor_specializaton","includes","className","xs","lg","class","map","store","created_at","color","onClick","getuuid","href","set","path","show","onClose","size","closeButton","for","id","first_name","type","name","defaultValue"],"mappings":"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","file":"static/js/40.5f2395af.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CContainer,\r\n  CJumbotron,\r\n  CRow,\r\n  CEmbed,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownDivider,\r\n  CDropdownHeader,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CEmbedItem\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\nimport BASE_URL from 'src/views/base'\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\nconsole.log(cookies.get('gym_uuid'))\r\n\r\n\r\nconst Expenses = () => {\r\n\r\n        \r\nconst [modal, setModal] = useState(false)\r\nconst [large, setLarge] = useState(false)\r\nconst [small, setSmall] = useState(false)\r\nconst [primary, setPrimary] = useState(false)\r\nconst [success, setSuccess] = useState(false)\r\nconst [warning, setWarning] = useState(false)\r\nconst [danger, setDanger] = useState(false)\r\nconst [info, setInfo] = useState(false)\r\n\r\n\r\nconst [getinstructor, setgetinstructor] = useState([])\r\nconst [getuser, setuser] = useState([])\r\n\r\nconst axios = require('axios');\r\n\r\nuseEffect(() => {\r\n    axios\r\n    .get(BASE_URL + 'gymprofile/instructor/?gym_id='+cookies.get('gym_uuid'))\r\n    .then(res => {\r\n        console.log(res)\r\n        setgetinstructor(res.data)\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}, [])\r\n\r\n\r\nuseEffect(() => {\r\n    axios\r\n      .get(BASE_URL + 'user/?gym_id=' + cookies.get('gym_uuid'))\r\n      .then(res => {\r\n        console.log(res)\r\n        setuser(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n\r\n  const [getinstructordetail, setinstructordetail] = useState([])\r\n\r\n  function Clicker(uuid) {\r\n      // alert(uuid);\r\n      setSuccess(!success);\r\n      //  debugger\r\n      axios\r\n        .get(BASE_URL + 'gymprofile/instructor/' + uuid)\r\n        .then(getuuid => {\r\n          console.log(getuuid);\r\n          setinstructordetail(getuuid.data);\r\n        })\r\n  \r\n    }\r\n\r\n\r\nasync function NewInstructor() {\r\n    // setSuccess(false);\r\n   \r\n    //  debugger\r\n    // var form = document.forms[\"regform\"][\"email\"].value;   \r\n    var instructor_name = document.getElementById(\"instructor_name\").value;\r\n    var specialization = document.getElementById(\"specialization\").value;\r\n    var gym = cookies.get('gym_uuid')\r\n    {  \r\n        console.log('Trying to send request');\r\n        \r\n        try {\r\n            let loader = `<div><div class=\"loader centered\"/></div>`;\r\n            // document.getElementById('reg').innerHTML = loader;\r\n            console.log('Trying');\r\n            let res = await axios.post(BASE_URL + 'gymprofile/dash/', {\r\n            \r\n                gym_id:'c29e1f29-b06c-4852-ba41-930528196fe6',\r\n                start_date:'2021-01-10',\r\n                end_date:'2021-04-10'\r\n            });\r\n            if (res.status === 200) {\r\n                //  debugger\r\n                // test for status you want, etc\r\n                console.log(res.status);\r\n                console.log(res.data);\r\n                // alert(res.data.message);\r\n  \r\n                window.location.reload();\r\n               \r\n            }\r\n            //  debugger\r\n            // Don't forget to return something\r\n            return res.data\r\n        }\r\n        catch (err) {\r\n            console.error('Signup Failed , Please try again.');\r\n            window.location.reload();\r\n            alert(err);\r\n        }\r\n    }\r\n}\r\n\r\nasync function UpdateInstructor() {\r\n    // setSuccess(false);\r\n   \r\n    //  debugger\r\n    // var form = document.forms[\"regform\"][\"email\"].value;   \r\n    var instructor_info = document.getElementById(\"update_instructor_info\").value;\r\n    var specialization = document.getElementById(\"update_specialization\").value;\r\n    var gym = cookies.get('gym_uuid')\r\n    var uuid = document.getElementById(\"update_uuid\").value;\r\n    \r\n    \r\n    {  \r\n       \r\n        console.log('Trying to send request');\r\n        \r\n        try {\r\n            let loader = `<div><div class=\"loader centered\"/></div>`;\r\n            // document.getElementById('reg').innerHTML = loader;\r\n            console.log('Trying');\r\n            let res = await axios.patch(BASE_URL + 'gymprofile/instructor/' + uuid +'/', {\r\n            \r\n                instructor_info:instructor_info,\r\n                instructor_specializaton:specialization,\r\n                gym:gym\r\n            });\r\n            if (res.status === 200) {\r\n                //  debugger\r\n                // test for status you want, etc\r\n                console.log(res.status);\r\n                console.log(res.data);\r\n                // alert(res.data.message);\r\n  \r\n                window.location.reload();\r\n            }\r\n            //  debugger\r\n            // Don't forget to return something\r\n            return res.data\r\n        }\r\n        catch (err) {\r\n            console.error('Signup Failed , Please try again.');\r\n            window.location.reload();\r\n            alert(err);\r\n        }\r\n    }\r\n}\r\n\r\nasync function deleteInstructor(uuid) {\r\n    // setSuccess(false);\r\n   console.log(uuid)\r\n    \r\n    {  \r\n       \r\n        console.log('Trying to send request');\r\n        \r\n        try {\r\n            let loader = `<div><div class=\"loader centered\"/></div>`;\r\n            // document.getElementById('reg').innerHTML = loader;\r\n            console.log('Trying');\r\n            let res = await axios.delete(BASE_URL + 'gymprofile/instructor/' + uuid +'/', {\r\n            \r\n                uuid:uuid\r\n            });\r\n            if (res.status === 200) {\r\n                //  debugger\r\n                // test for status you want, etc\r\n                console.log(res.status);\r\n                console.log(res.data);\r\n                // alert(res.data.message);\r\n  \r\n                window.location.reload();\r\n            }\r\n            //  debugger\r\n            // Don't forget to return something\r\n            return res.data\r\n        }\r\n        catch (err) {\r\n            console.error('Signup Failed , Please try again.');\r\n            window.location.reload();\r\n            alert(err);\r\n        }\r\n    }\r\n}\r\n\r\nvar perm = cookies.get('perms')\r\n\r\n  if (perm.includes('Instructor')){\r\n  return (\r\n    <>\r\n   \r\n        <CRow>\r\n      <div className=\"col-md-12\">\r\n              <div className=\"manage_top_btn\">\r\n              <div className=\"manage-btn-left\">\r\n                  \r\n                  {/* <button className=\"mn_btn_1 mr-1\" onClick={() => setPrimary(!primary)}> <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i> Add Instructor </button> */}\r\n                </div> \r\n                \r\n\r\n              </div>\r\n              \r\n          </div>\r\n        <CCol xs=\"12\" lg=\"12\">\r\n          <CCard>\r\n         \r\n          <div className=\"col-md-12\">\r\n          <div className=\"manage-table-main\">\r\n                <table class=\"table\">\r\n            <thead>\r\n            <tr>\r\n                \r\n                <th>Instructor Name</th>\r\n                <th>Date Joined</th>\r\n                <th>Specialization</th>\r\n                {/* <th  class=\"text-center\">Frequency</th> */}\r\n                {/* <th  class=\"text-center\">Active/InActive</th> */}\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {getinstructor.map(store => (\r\n            <tr>\r\n\r\n                <td>{store.instructor_info}</td>\r\n                <td>{store.created_at}</td>\r\n                <td>{store.instructor_specializaton}</td>\r\n                {/* <td  class=\"text-center\">{store.frequency}</td> */}\r\n                {/* <td class=\"text-center\">\r\n                <label class=\"switch\">\r\n                <input type=\"checkbox\" />\r\n                <span class=\"slider round\"></span>\r\n                </label>\r\n                </td> */}\r\n                <td>\r\n                <CButton color=\"primary\" onClick={() => Clicker(store.uuid)}>Manage</CButton>{' '}\r\n                <a href ='#/base/Insbookings'  onClick={() => cookies.set('ins',store.uuid,{path:'/'})}><button class=\"btn btn-primary user-bookings\">Bookings</button></a>\r\n                {/* <button type=\"button\" class=\"btn btn-danger\" onClick={() => deleteInstructor(store.uuid)}><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button>  */}\r\n                </td>\r\n            </tr>\r\n            ))}\r\n\r\n        </tbody>\r\n        </table>\r\n\r\n    </div>\r\n        </div>\r\n\r\n        \r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n    <CModal \r\n        show={primary} \r\n        onClose={setPrimary}\r\n        size=\"lg\"\r\n        >\r\n        <CModalHeader closeButton className=\"add-user-modal\">\r\n        <CModalTitle>Add Instructor</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n        <div class=\"col-md-12\">\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"expense_name\">Name of the Instructor</label>\r\n                        <select id='instructor_name' class=\"form-control\"> \r\n                        {getuser.map(store => (<option value={store.uuid}> {store.first_name} </option>))}\r\n                        </select>\r\n                </div>\r\n                </div>\r\n\r\n                 <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"date_paid\">Specialization</label>\r\n                        <input type=\"text\" id=\"specialization\" name=\"specialization\" class=\"form-control\"  />\r\n                </div>\r\n                </div>\r\n\r\n        </div>\r\n\r\n        </div>\r\n        \r\n        </CModalBody>\r\n        <CModalFooter>\r\n            <div className=\"col-md-12 text-center\">\r\n            <CButton color=\"primary\" onClick={NewInstructor}>Save</CButton>{' '}\r\n            <CButton \r\n            color=\"secondary\" \r\n            onClick={() => setPrimary(false)}\r\n            >Close</CButton>\r\n            </div>\r\n           \r\n        </CModalFooter>\r\n    </CModal>\r\n\r\n    <CModal \r\n        show={success} \r\n        onClose={setSuccess}\r\n        size=\"lg\"\r\n        >\r\n        <CModalHeader closeButton className=\"add-user-modal\">\r\n        <CModalTitle>Update Expense</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n        <div class=\"card-body\">\r\n    \r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-sm-6\" >\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-label\" for=\"expense_name\">Name of the instructor</label>\r\n                    <select  id='update_instructor_info' class=\"form-control\"> \r\n                        {getuser.map(store => (<option defaultValue= {getinstructordetail.instructor_info} value={store.uuid}> {store.first_name} </option>))}\r\n                        </select>\r\n                    <input type='hidden' value={getinstructordetail.uuid} id ='update_uuid'/>\r\n            </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-6\" >\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-label\" for=\"date_paid\">Specialization </label>\r\n                    <input type=\"text\" id=\"update_specialization\" defaultValue= {getinstructordetail.instructor_specializaton} name=\"update_date_paid\" class=\"form-control\"  />\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        \r\n        </CModalBody>\r\n        <CModalFooter>\r\n            <CButton color=\"primary\" onClick = {UpdateInstructor}>Save</CButton>{' '}\r\n            <CButton \r\n            color=\"secondary\" \r\n            onClick={() => setSuccess(false)}\r\n            >Close</CButton>\r\n        </CModalFooter>\r\n        </CModal>\r\n\r\n    </>\r\n  )}\r\n  else{\r\n    return window.location.href='#/dashboard'\r\n  }\r\n}\r\n\r\nexport default Expenses\r\n"],"sourceRoot":""}