{"version":3,"sources":["views/base/Insbookings/Insbookings.js"],"names":["cookies","Cookies","console","log","get","Classes","useState","blog","setBlog","axios","require","useEffect","BASE_URL","then","res","data","catch","err","success","setSuccess","getclasses","setgetclasses","className","xs","lg","class","map","store","class_topic","date","participants","color","onClick","uuid","getuuid","href","show","onClose","size","closeButton","booked_date","select_user","title"],"mappings":"6PA8BMA,EAAU,IAAIC,IAEpBC,QAAQC,IAAIH,EAAQI,IAAI,QACxBF,QAAQC,IAAIH,EAAQI,IAAI,aAkMTC,UA/LC,WAEhB,MAAwBC,mBAAS,IAAjC,mBAAOC,EAAP,KAAaC,EAAb,KACA,EAA0BF,mBAAS,IAAnC,mBACA,GADA,UAC0BA,mBAAS,KAAnC,mBACA,GADA,UAC0BA,mBAAS,KAAnC,mBACA,GADA,UAC0BA,mBAAS,KAAnC,mBAGMG,GAHN,UAGcC,EAAQ,MACtBC,qBAAU,WACNF,EACCL,IAAIQ,IAAW,8BAA+BZ,EAAQI,IAAI,OAAS,QAASJ,EAAQI,IAAI,aACxFS,MAAK,SAAAC,GACFZ,QAAQC,IAAIW,GACZN,EAAQM,EAAIC,SAEfC,OAAM,SAAAC,GACHf,QAAQC,IAAIc,QAEjB,IAGH,MAA0BX,oBAAS,GAAnC,mBACA,GADA,UAC0BA,oBAAS,IAAnC,mBACA,GADA,UAC0BA,oBAAS,IAAnC,mBACA,GADA,UAC8BA,oBAAS,IAAvC,mBACA,GADA,UAC8BA,oBAAS,IAAvC,mBAAOY,EAAP,KAAgBC,EAAhB,KACA,EAA8Bb,oBAAS,GAAvC,mBACA,GADA,UAC4BA,oBAAS,IAArC,mBACA,GADA,UACwBA,oBAAS,IAAjC,mBAEA,GAFA,UAEoCA,mBAAS,KAA7C,mBAAOc,EAAP,KAAmBC,EAAnB,KAkBE,OACE,qCAEI,eAAC,KAAD,WACF,qBAAKC,UAAU,YAAf,SACQ,qBAAKA,UAAU,iBAAf,SACA,qBAAKA,UAAU,wBAmBrB,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KAAjB,SACE,cAAC,IAAD,UAEA,qBAAKF,UAAU,YAAf,SACA,qBAAKA,UAAU,oBAAf,SACM,wBAAOG,MAAM,QAAb,UACJ,gCACA,+BAEI,uCACA,sCAEA,sCACA,oDAIA,6CAGJ,gCACKlB,EAAKmB,KAAI,SAAAC,GAAK,OACnB,+BAEI,6BAAKA,EAAMZ,KAAKa,cAChB,uCAEA,6BAAKD,EAAME,OACX,6BAAKF,EAAMG,eASX,+BACA,cAAC,IAAD,CAASC,MAAM,UAAUC,QAAS,kBA/EjCC,EA+E+CN,EAAMZ,KAAKkB,KA/ErDJ,EA+E0DF,EAAME,KA5ElFV,GAAYD,QAEZT,EACGL,IAAIQ,IAAW,oCAAqCiB,EAAM,UAAWI,EAAO,QAAUjC,EAAQI,IAAI,aAClGS,MAAK,SAAAqB,GACJhC,QAAQC,IAAI+B,GACZb,EAAca,EAAQnB,SAT9B,IAAiBkB,EAAKJ,GA+EN,4BAAsG,IACtG,oBAAGM,KAAK,iBAAR,UAAyB,cAAC,IAAD,CAASb,UAAU,YAAnB,0BAAuD,gCAgBxF,eAAC,KAAD,CACAc,KAAMlB,EACNmB,QAASlB,EACTmB,KAAK,KAHL,UAKA,cAAC,KAAD,CAAcC,aAAW,EAACjB,UAAU,iBAApC,SACA,cAAC,KAAD,yBAEA,cAAC,KAAD,UAEI,qBAAKG,MAAM,MAAX,SACI,qBAAKH,UAAU,sBAAf,SACA,qBAAKA,UAAU,oBAAf,SACQ,wBAAOG,MAAM,QAAb,UAEE,gCACE,+BACE,2CACA,sCACA,6CAILL,EAAWM,KAAI,SAAAC,GAAK,OACnB,gCACE,+BACE,6BAAKA,EAAMa,cACT,6BAAKb,EAAMc,cAEb,6BAAI,mBAAGN,KAAK,IAAIV,MAAM,OAAOiB,MAAM,eAAe,cAAY,UAA1D,SAAoE,mBAAGjB,MAAM,YAAY,cAAY,gCAmB/H,eAAC,KAAD,WACI,cAAC,IAAD,CAASM,MAAM,UAAf,kBAAyC,IACzC,cAAC,IAAD,CACAA,MAAM,YACNC,QAAS,kBAAMb,GAAW,IAF1B","file":"static/js/39.77d48dd0.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport $ from 'jquery';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CContainer,\r\n  CJumbotron,\r\n  CRow,\r\n  CEmbed,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownDivider,\r\n  CDropdownHeader,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CHeaderNavLink,\r\n  CEmbedItem\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\nimport Cookies from 'universal-cookie';\r\nimport BASE_URL from 'src/views/base';\r\n\r\nconst cookies = new Cookies();\r\n\r\nconsole.log(cookies.get('ins'))\r\nconsole.log(cookies.get('gym_uuid'))\r\n\r\n\r\nconst Classes = () => {\r\n\r\nconst [blog, setBlog] = useState([])\r\nconst [blog2, setBlog2] = useState([])\r\nconst [blog3, setBlog3] = useState([])\r\nconst [blog4, setBlog4] = useState([])\r\nconst [blog5, setBlog5] = useState([])\r\n\r\n\r\nconst axios = require('axios');\r\nuseEffect(() => {\r\n    axios\r\n    .get(BASE_URL + 'gymprofile/class/date/?ins='+ cookies.get('ins') + '&gym='+ cookies.get('gym_uuid'))\r\n    .then(res => {\r\n        console.log(res)\r\n        setBlog(res.data)\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}, [])\r\n\r\n\r\nconst [modal, setModal] = useState(false)\r\nconst [large, setLarge] = useState(false)\r\nconst [small, setSmall] = useState(false)\r\nconst [primary, setPrimary] = useState(false)\r\nconst [success, setSuccess] = useState(false)\r\nconst [warning, setWarning] = useState(false)\r\nconst [danger, setDanger] = useState(false)\r\nconst [info, setInfo] = useState(false)\r\n\r\nconst [getclasses, setgetclasses] = useState([])\r\n\r\nfunction Clicker(uuid,date) {\r\n    // alert(uuid);\r\n    // alert(date);\r\n    setSuccess(!success);\r\n    //  debugger\r\n    axios\r\n      .get(BASE_URL + 'gymprofile/instructorclass/?date='+ date +'&class='+ uuid + '&gym=' + cookies.get('gym_uuid'))\r\n      .then(getuuid => {\r\n        console.log(getuuid);\r\n        setgetclasses(getuuid.data);\r\n      })\r\n\r\n  }\r\n  \r\n\r\n\r\n  return (\r\n    <>\r\n   \r\n        <CRow>\r\n      <div className=\"col-md-12\">\r\n              <div className=\"manage_top_btn\">\r\n              <div className=\"manage-btn-left\">\r\n\r\n                \r\n              \r\n\r\n                {/* <CHeaderNavLink to=\"ClassCategories/ClassCategories\">\r\n                <button className=\"mn_btn_1 mr-1\">\r\n                <i class=\"fa fa-list-alt\" aria-hidden=\"true\"></i>\r\n                Categories </button>\r\n               \r\n                </CHeaderNavLink> */}\r\n               \r\n                  \r\n                </div> \r\n                   \r\n\r\n              </div>\r\n              \r\n          </div>\r\n        <CCol xs=\"12\" lg=\"12\">\r\n          <CCard>\r\n         \r\n          <div className=\"col-md-12\">\r\n          <div className=\"manage-table-main\">\r\n                <table class=\"table\">\r\n            <thead>\r\n            <tr>\r\n                {/* <th>Sr.no</th> */}\r\n                <th>Class</th>\r\n                <th>Type</th>\r\n                {/* <th>Age group</th> */}\r\n                <th>Date</th>\r\n                <th>No Of Participants</th>\r\n                {/* <th>Duration</th> */}\r\n                {/* <th>Active</th> */}\r\n                {/* <th>Cover Image</th> */}\r\n                <th>Action</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n                {blog.map(store =>(\r\n            <tr>\r\n                {/* <td>1</td> */}\r\n                <td>{store.data.class_topic}</td>\r\n                <td>Class</td>\r\n                {/* <td>Adult</td> */}\r\n                <td>{store.date}</td>\r\n                <td>{store.participants}</td>\r\n                {/* <td>{store.class_duration}</td> */}\r\n                {/* <td>\r\n                <label class=\"switch\">\r\n                <input type=\"checkbox\" />\r\n                <span class=\"slider round\"></span>\r\n                </label>\r\n                </td> */}\r\n                {/* <td> <img className=\"class-cover-img\"  src=\"avatars/6.jpg\"/> </td> */}\r\n                <td>\r\n                <CButton color=\"primary\" onClick={() => Clicker(store.data.uuid,store.date)}>View Attendees</CButton>{' '}\r\n                <a href='#/base/Classes'><CButton className='detailbtn' >View Details</CButton>{' '}</a>\r\n                </td>\r\n            </tr>))}\r\n             </tbody>\r\n        </table>\r\n\r\n    </div>\r\n        </div>\r\n\r\n        \r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n   \r\n\r\n        <CModal \r\n        show={success} \r\n        onClose={setSuccess}\r\n        size=\"lg\"\r\n        >\r\n        <CModalHeader closeButton className=\"add-user-modal\">\r\n        <CModalTitle>Bookings</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n   \r\n            <div class=\"row\">\r\n                <div className=\"col-md-12 col-xs-12\">\r\n                <div className=\"manage-table-main\">\r\n                        <table class=\"table\">\r\n                        \r\n                          <thead>\r\n                            <tr>\r\n                              <th>Book date</th>\r\n                              <th>User</th>\r\n                              <th>Action</th>\r\n                            </tr>\r\n                          </thead>\r\n                        \r\n                        {getclasses.map(store => (\r\n                          <tbody>\r\n                            <tr>\r\n                              <td>{store.booked_date}</td>\r\n                                <td>{store.select_user}</td>\r\n                              {/* <td> 2021-02-24 </td> */}\r\n                              <td><a href=\"#\" class=\"view\" title=\"View Receipt\" data-toggle=\"tooltip\"><i class=\"fa fa-eye\" aria-hidden=\"true\"></i></a></td>\r\n                            </tr>\r\n                          </tbody>\r\n                           ))} \r\n                        </table>\r\n\r\n\r\n                        {/* <div className=\"hed_title\">\r\n                          <i class=\"fa fa-money\" aria-hidden=\"true\"></i>\r\n                            Total Amount Paid : <span> 100 </span>\r\n                        </div> */}\r\n\r\n                      </div>\r\n                </div>\r\n            </div>\r\n\r\n   \r\n        \r\n        </CModalBody>\r\n        <CModalFooter>\r\n            <CButton color=\"primary\" >Save</CButton>{' '}\r\n            <CButton \r\n            color=\"secondary\" \r\n            onClick={() => setSuccess(false)}\r\n            >Close</CButton>\r\n        </CModalFooter>\r\n        </CModal>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Classes\r\n"],"sourceRoot":""}