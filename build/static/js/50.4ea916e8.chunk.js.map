{"version":3,"sources":["views/base/Promocodes/Ruleset.js"],"names":["cookies","Cookies","console","log","get","Expenses","useState","primary","setPrimary","success","setSuccess","getinstructor","setgetinstructor","maxusage","setmaxusage","getuser","setuser","getgym","setgym","axios","require","useEffect","BASE_URL","then","res","data","catch","err","getinstructordetail","a","all_gyms","document","getElementById","value","gyms","$","val","FormData","i","length","append","config","method","url","headers","_boundary","JSON","stringify","status","window","location","reload","alert","error","gym_ruleset","max_usage","post","gyms_ruleset","max_uses_rule","className","class","for","onClick","id","map","store","uuid","max_usage_per_user","color","Ruleset","show","onClose","size","closeButton","type","multiple","gym_name","NewGymRuleset","first_name","name"],"mappings":"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","file":"static/js/50.4ea916e8.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport $ from 'jquery';\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CContainer,\r\n  CJumbotron,\r\n  CRow,\r\n  CEmbed,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownDivider,\r\n  CDropdownHeader,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CEmbedItem\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\nimport BASE_URL from 'src/views/base'\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\nconsole.log(cookies.get('gym_uuid'))\r\n\r\n\r\nconst Expenses = () => {\r\n\r\n        \r\nconst [modal, setModal] = useState(false)\r\nconst [large, setLarge] = useState(false)\r\nconst [small, setSmall] = useState(false)\r\nconst [primary, setPrimary] = useState(false)\r\nconst [success, setSuccess] = useState(false)\r\nconst [warning, setWarning] = useState(false)\r\nconst [danger, setDanger] = useState(false)\r\nconst [info, setInfo] = useState(false)\r\n\r\n\r\nconst [getinstructor, setgetinstructor] = useState([])\r\nconst [maxusage,setmaxusage] = useState([])\r\nconst [getuser, setuser] = useState([])\r\nconst [getgym, setgym] = useState([])\r\n\r\n\r\nconst axios = require('axios');\r\n\r\nuseEffect(() => {\r\n    axios\r\n    .get(BASE_URL + 'payments/gymrule/')\r\n    .then(res => {\r\n        console.log(res)\r\n        setgetinstructor(res.data)\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}, [])\r\n\r\nuseEffect(() => {\r\n    axios\r\n    .get(BASE_URL + 'payments/maxusage/')\r\n    .then(res => {\r\n        console.log(res)\r\n        setmaxusage(res.data)\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}, [])\r\n\r\nuseEffect(() => {\r\n    axios\r\n      .get(BASE_URL + 'user/subscribed/userslist/?gym_id=' + cookies.get('gym_uuid'))\r\n      .then(res => {\r\n        console.log(res)\r\n        setuser(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\nuseEffect(() => {\r\n    axios\r\n    .get(BASE_URL + 'gymprofile/')\r\n    .then(res => {\r\n        console.log(res)\r\n        setgym(res.data)\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}, [])\r\n\r\n\r\n\r\n  const [getinstructordetail, setinstructordetail] = useState([])\r\n\r\n  function Clicker(uuid) {\r\n      // alert(uuid);\r\n      setSuccess(!success);\r\n      //  debugger\r\n    \r\n  \r\n    }\r\n\r\n\r\nasync function NewGymRuleset() {\r\n    // setSuccess(false);\r\n   \r\n     debugger\r\n    var all_gyms = document.getElementById('all_gyms').value;\r\n    var gyms = $('#gyms').val();\r\n\r\n\r\n    var data = new FormData();\r\n    for (var i = 0; i < gyms.length; i++) {\r\n        data.append('gyms', gyms[i]);\r\n    }\r\n    data.append(\"all_gyms\",all_gyms );\r\n   \r\n    {  \r\n        console.log('Trying to send request');\r\n        try {\r\n            console.log('Trying')\r\n      \r\n            var config = {\r\n              method: \"post\",\r\n              url: BASE_URL + \"payments/gymrule/\",\r\n              headers: {\r\n                \"content-type\": `multipart/form-data; boundary=${data._boundary}`,\r\n              },\r\n              data: data,\r\n            };\r\n      \r\n            await axios(config)\r\n              .then(function (res) {\r\n                //  debugger\r\n                console.log(JSON.stringify(res.data));\r\n      \r\n                \r\n                  if (res.status === 200) {\r\n                      window.location.reload();\r\n      \r\n                  }\r\n                  else {\r\n                    //  debugger\r\n                    alert(\"BAD REQUEST\");\r\n                  }\r\n                \r\n                //  debugger\r\n                return res.data\r\n              })\r\n      \r\n      \r\n          }\r\n          catch (err) {\r\n            //  debugger\r\n            console.error(err);\r\n      \r\n          }\r\n    }\r\n}\r\n\r\nasync function Ruleset() {\r\n    // setSuccess(false);\r\n   \r\n    var gym_ruleset = document.getElementById(\"gym_ruleset\").value;\r\n    var max_usage = document.getElementById(\"max_usage\").value;\r\n    \r\n    \r\n    {  \r\n       \r\n        console.log('Trying to send request');\r\n        \r\n        try {\r\n            console.log('Trying');\r\n            let res = await axios.post(BASE_URL + 'payments/rulesets/', {\r\n                gyms_ruleset:gym_ruleset,\r\n                max_uses_rule:max_usage,\r\n            });\r\n            if (res.status === 201) {\r\n                //  debugger\r\n                // test for status you want, etc\r\n                alert('success')\r\n                console.log(res.status);\r\n                console.log(res.data);\r\n                // alert(res.data.message);\r\n  \r\n                window.location.reload();\r\n            }\r\n            //  debugger\r\n            // Don't forget to return something\r\n            return res.data\r\n        }\r\n        catch (err) {\r\n            console.error('Signup Failed , Please try again.');\r\n            window.location.reload();\r\n            alert(err);\r\n        }\r\n    }\r\n}\r\n\r\nasync function deleteInstructor(uuid) {\r\n    // setSuccess(false);\r\n   console.log(uuid)\r\n    \r\n    {  \r\n       \r\n        console.log('Trying to send request');\r\n        \r\n        try {\r\n            let loader = `<div><div class=\"loader centered\"/></div>`;\r\n            // document.getElementById('reg').innerHTML = loader;\r\n            console.log('Trying');\r\n            let res = await axios.delete(BASE_URL + 'gymprofile/instructor/' + uuid +'/', {\r\n            \r\n                uuid:uuid\r\n            });\r\n            if (res.status === 200) {\r\n                //  debugger\r\n                // test for status you want, etc\r\n                console.log(res.status);\r\n                console.log(res.data);\r\n                // alert(res.data.message);\r\n  \r\n                window.location.reload();\r\n            }\r\n            //  debugger\r\n            // Don't forget to return something\r\n            return res.data\r\n        }\r\n        catch (err) {\r\n            console.error('Signup Failed , Please try again.');\r\n            window.location.reload();\r\n            alert(err);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n   \r\n        <CRow>\r\n            <div className=\"col-md-12\">\r\n            <h3>Ruleset</h3>\r\n                <div class = \"row\">\r\n\r\n                <div class=\"col-sm-6\" >\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-label\" for=\"expense_name\">Gym Ruleset</label>\r\n                            <button className=\"add\"  onClick={() => setPrimary(!primary)}>+</button>\r\n                            <select id='gym_ruleset' class=\"form-control\"> \r\n                            {getinstructor.map(store => (store.gyms==''?<option value={store.uuid}> All gyms </option>:<option value={store.uuid}> {store.gyms} </option>))}\r\n                            </select>\r\n                    </div> \r\n                    </div>\r\n                \r\n                    <div class=\"col-sm-6\" >\r\n                        <div class=\"form-group\">\r\n                            <label class=\"form-label\" for=\"expense_name\">Max Usage / User</label>\r\n                            <button className=\"add\" onClick={() => Clicker()}>+</button>\r\n                            <select id='max_usage' class=\"form-control\"> \r\n                            {maxusage.map(store => (<option value={store.uuid}> {store.max_usage_per_user} </option>))}\r\n                            </select>\r\n                    </div> \r\n                    </div>\r\n\r\n                    <div className=\"col-md-12 text-center\">\r\n                        <CButton color=\"primary\" onClick={()=>Ruleset()}>Save</CButton>{' '}\r\n                      \r\n                    </div>\r\n\r\n                    \r\n\r\n\r\n\r\n                </div>\r\n            </div>\r\n       </CRow>\r\n\r\n    <CModal \r\n        show={primary} \r\n        onClose={setPrimary}\r\n        size=\"lg\"\r\n        >\r\n        <CModalHeader closeButton className=\"add-user-modal\">\r\n        <CModalTitle>Add Instructor</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n        <div class=\"col-md-12\">\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"expense_name\">Include All Gyms</label>\r\n                        <input type='checkbox'id='all_gyms'/>\r\n                </div> \r\n                </div>\r\n\r\n                <div class=\"col-sm-6\" >\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-label\" for=\"expense_name\">Gyms</label>\r\n                    <select id='gyms' class=\"form-control\" multiple> \r\n                        {getgym.map(store => (\r\n                        <option value={store.uuid}> {store.gym_name} </option>\r\n                        ))}\r\n                        </select>\r\n                    <input type='hidden' value={getinstructordetail.uuid} id ='update_uuid'/>\r\n            </div>\r\n            </div>\r\n\r\n\r\n               \r\n\r\n        </div>\r\n\r\n        </div>\r\n        \r\n        </CModalBody>\r\n        <CModalFooter>\r\n            <div className=\"col-md-12 text-center\">\r\n            <CButton color=\"primary\" onClick={()=>NewGymRuleset()}>Save</CButton>{' '}\r\n            <CButton \r\n            color=\"secondary\" \r\n            onClick={() => setPrimary(false)}\r\n            >Close</CButton>\r\n            </div>\r\n           \r\n        </CModalFooter>\r\n    </CModal>\r\n\r\n    <CModal \r\n        show={success} \r\n        onClose={setSuccess}\r\n        size=\"lg\"\r\n        >\r\n        <CModalHeader closeButton className=\"add-user-modal\">\r\n        <CModalTitle>Add Max Use</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n        <div class=\"card-body\">\r\n    \r\n        <div class=\"row\">\r\n\r\n\r\n            <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"expense_name\">Include All Users</label>\r\n                        <input type='checkbox'id='all_users'/>\r\n                </div> \r\n                </div>\r\n\r\n\r\n            <div class=\"col-sm-6\" >\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-label\" for=\"expense_name\">Allowed Users</label>\r\n                    <select  id='allowed_user' class=\"form-control\"> \r\n                        {getuser.map(store => (<option  value={store.uuid}> {store.first_name} </option>))}\r\n                        </select>\r\n            </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-6\" >\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-label\" for=\"date_paid\">max_usage_per_user </label>\r\n                    <input type=\"number\" id=\"max_usage_per_user\" name=\"max_usage_per_user\" class=\"form-control\"  />\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        \r\n        </CModalBody>\r\n        <CModalFooter>\r\n            <CButton color=\"primary\" >Save</CButton>{' '}\r\n            <CButton \r\n            color=\"secondary\" \r\n            onClick={() => setSuccess(false)}\r\n            >Close</CButton>\r\n        </CModalFooter>\r\n        </CModal>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Expenses\r\n"],"sourceRoot":""}