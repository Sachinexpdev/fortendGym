{"version":3,"sources":["views/base/Promocodes/Promocodes.js"],"names":["cookies","Cookies","console","log","get","Expenses","useState","primary","setPrimary","secondary","setsecondary","Rulesuccess","setRulesuccess","success","setSuccess","getinstructor","setgetinstructor","getuser","setuser","getinstructordetail","setinstructordetail","axios","require","NewPromocode","a","code","document","getElementById","value","discount","start_date","end_date","max_usage","ruleset","post","BASE_URL","res","status","data","window","location","reload","error","alert","UpdateInstructor","instructor_info","specialization","gym","uuid","patch","instructor_specializaton","deleteInstructor","delete","useEffect","then","catch","err","className","onClick","class","xs","lg","map","store","color","getuuid","type","href","gyms_ruleset","max_uses_rule","show","onClose","size","closeButton","for","id","name","defaultValue","first_name"],"mappings":"+QA4BMA,EAAU,IAAIC,IACpBC,QAAQC,IAAIH,EAAQI,IAAI,aA+hBTC,UA5hBE,WAGjB,MAA0BC,oBAAS,GAAnC,mBACA,GADA,UAC0BA,oBAAS,IAAnC,mBACA,GADA,UAC0BA,oBAAS,IAAnC,mBACA,GADA,UAC8BA,oBAAS,IAAvC,mBAAOC,EAAP,KAAgBC,EAAhB,KACA,EAAiCF,oBAAS,GAA1C,mBAAOG,EAAP,KAAiBC,EAAjB,KACA,EAAoCJ,oBAAS,GAA7C,mBAAOK,EAAP,KAAmBC,EAAnB,KACA,EAA8BN,oBAAS,GAAvC,mBAAOO,EAAP,KAAgBC,EAAhB,KACA,EAA8BR,oBAAS,GAAvC,mBACA,GADA,UAC4BA,oBAAS,IAArC,mBACA,GADA,UACwBA,oBAAS,IAAjC,mBAGA,GAHA,UAG0CA,mBAAS,KAAnD,mBAAOS,EAAP,KAAsBC,EAAtB,KACA,EAA2BV,mBAAS,IAApC,mBAAOW,EAAP,KAAgBC,EAAhB,KACA,EAAmDZ,mBAAS,IAA5D,mBAAOa,EAAP,KAA4BC,EAA5B,KAGMC,EAAQC,EAAQ,KApBC,SA4ERC,IA5EQ,2EA4EvB,wCAAAC,EAAA,6DAIQC,EAAOC,SAASC,eAAe,QAAQC,MACvCC,EAAWH,SAASC,eAAe,YAAYC,MAC/CE,EAAaJ,SAASC,eAAe,cAAcC,MACnDG,EAAWL,SAASC,eAAe,YAAYC,MAC/CI,EAAYN,SAASC,eAAe,aAAaC,MACjDK,EAAUP,SAASC,eAAe,WAAWC,MAG7C1B,QAAQC,IAAI,0BAZpB,qDAiBYD,QAAQC,IAAI,UAjBxB,UAkB4BkB,EAAMa,KAAKC,IAAW,uBAAwB,CAC1DV,KAAKA,EACLI,SAASA,EACTC,WAAWA,EACXC,SAASA,EACTC,UAAUA,EACVC,QAAQA,IAxBxB,eA0B+B,OARfG,EAlBhB,QA0BoBC,SAGJnC,QAAQC,IAAIiC,EAAIC,QAChBnC,QAAQC,IAAIiC,EAAIE,MAEhBC,OAAOC,SAASC,UAhChC,kBAsCmBL,EAAIE,MAtCvB,kCAyCYpC,QAAQwC,MAAM,qCACdH,OAAOC,SAASC,SAChBE,MAAM,EAAD,IA3CjB,2DA5EuB,+BA4HRC,IA5HQ,2EA4HvB,oCAAApB,EAAA,6DAKQqB,EAAkBnB,SAASC,eAAe,0BAA0BC,MACpEkB,EAAiBpB,SAASC,eAAe,yBAAyBC,MAClEmB,EAAM/C,EAAQI,IAAI,YAClB4C,EAAOtB,SAASC,eAAe,eAAeC,MAK9C1B,QAAQC,IAAI,0BAbpB,qDAkBYD,QAAQC,IAAI,UAlBxB,UAmB4BkB,EAAM4B,MAAMd,IAAW,yBAA2Ba,EAAM,IAAK,CAEzEH,gBAAgBA,EAChBK,yBAAyBJ,EACzBC,IAAIA,IAvBpB,eAyB+B,OANfX,EAnBhB,QAyBoBC,SAGJnC,QAAQC,IAAIiC,EAAIC,QAChBnC,QAAQC,IAAIiC,EAAIE,MAGhBC,OAAOC,SAASC,UAhChC,kBAoCmBL,EAAIE,MApCvB,kCAuCYpC,QAAQwC,MAAM,qCACdH,OAAOC,SAASC,SAChBE,MAAM,EAAD,IAzCjB,2DA5HuB,+BA0KRQ,GA1KQ,iFA0KvB,WAAgCH,GAAhC,eAAAxB,EAAA,6DAEGtB,QAAQC,IAAI6C,GAIP9C,QAAQC,IAAI,0BANpB,qDAWYD,QAAQC,IAAI,UAXxB,SAY4BkB,EAAM+B,OAAOjB,IAAW,yBAA2Ba,EAAM,IAAK,CAE1EA,KAAKA,IAdrB,cAgB+B,OAJfZ,EAZhB,QAgBoBC,SAGJnC,QAAQC,IAAIiC,EAAIC,QAChBnC,QAAQC,IAAIiC,EAAIE,MAGhBC,OAAOC,SAASC,UAvBhC,kBA2BmBL,EAAIE,MA3BvB,kCA8BYpC,QAAQwC,MAAM,qCACdH,OAAOC,SAASC,SAChBE,MAAM,EAAD,IAhCjB,2DA1KuB,sBAgNrB,OA1LFU,qBAAU,WACNhC,EACCjB,IAAI+B,IAAW,wBACfmB,MAAK,SAAAlB,GACFlC,QAAQC,IAAIiC,GACZpB,EAAiBoB,EAAIE,SAExBiB,OAAM,SAAAC,GACHtD,QAAQC,IAAIqD,QAEjB,IAGHH,qBAAU,WACNhC,EACGjB,IAAI+B,IAAW,qBACfmB,MAAK,SAAAlB,GACJlC,QAAQC,IAAIiC,GACZlB,EAAQkB,EAAIE,SAEbiB,OAAM,SAAAC,GACLtD,QAAQC,IAAIqD,QAEf,IAoKD,qCAEA,4CACI,eAAC,KAAD,WACF,qBAAKC,UAAU,YAAf,SACQ,qBAAKA,UAAU,iBAAf,SACA,qBAAKA,UAAU,kBAAf,SAEI,yBAAQA,UAAU,gBAAgBC,QAAS,kBAAMlD,GAAYD,IAA7D,cAAwE,mBAAGoD,MAAM,oBAAoB,cAAY,SAAjH,2BASV,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KAAjB,SAEE,cAAC,IAAD,UAEA,qBAAKJ,UAAU,YAAf,SACA,qBAAKA,UAAU,oBAAf,SACM,wBAAOE,MAAM,QAAb,UACJ,gCACA,+BAEI,sCACA,0CACA,4CACA,0CACA,6CAKJ,gCACC5C,EAAc+C,KAAI,SAAAC,GAAK,OACxB,+BAEI,6BAAKA,EAAMtC,OACX,6BAAKsC,EAAMlC,WACX,6BAAKkC,EAAMjC,aACX,6BAAKiC,EAAMhC,WAGX,+BACA,cAAC,IAAD,CAASiC,MAAM,UAAUN,QAAS,kBA/M/BV,EA+M6Ce,EAAMf,KA7MhElC,GAAYD,QAEZQ,EACGjB,IAAI+B,IAAW,yBAA2Ba,GAC1CM,MAAK,SAAAW,GACJ/D,QAAQC,IAAI8D,GACZ7C,EAAoB6C,EAAQ3B,SARpC,IAAiBU,GA+MH,oBAA8E,IAE9E,wBAAQkB,KAAK,SAASP,MAAM,iBAAiBD,QAAS,kBAAMP,GAAiBY,EAAMf,OAAnF,SAA0F,mBAAGW,MAAM,gBAAgB,cAAY,oCAiB3I,0CAEE,eAAC,KAAD,WACA,qBAAKF,UAAU,YAAf,SACQ,qBAAKA,UAAU,iBAAf,SACA,qBAAKA,UAAU,kBAAf,SAEI,mBAAGU,KAAK,iBAAR,SAAyB,yBAAQV,UAAU,gBAAgBC,QAAQ,iBAA1C,cAA4D,mBAAGC,MAAM,oBAAoB,cAAY,SAArG,2BASrC,cAAC,IAAD,CAAMC,GAAG,KAAKC,GAAG,KAAjB,SAEI,cAAC,IAAD,UAEA,qBAAKJ,UAAU,YAAf,SAEM,wBAAOE,MAAM,QAAb,UACJ,gCACA,+BAEI,yCACA,gDACA,6CAGJ,gCACC1C,EAAQ6C,KAAI,SAAAC,GAAK,OAClB,+BAEyB,IAApBA,EAAMK,aAAiB,0CAAkB,6BAAKL,EAAMK,eACrD,6BAAKL,EAAMM,gBAEX,+BACA,cAAC,IAAD,CAASL,MAAM,UAAUN,QAAS,kBA5P5BV,EA4P2Ce,EAAMf,KA1P/DpC,GAAgBD,QAEhBU,EACGjB,IAAI+B,IAAW,yBAA2Ba,GAC1CM,MAAK,SAAAW,GACJ/D,QAAQC,IAAI8D,GACZ7C,EAAoB6C,EAAQ3B,SARpC,IAAkBU,GA4PN,oBAA+E,IAE/E,wBAAQkB,KAAK,SAASP,MAAM,iBAAiBD,QAAS,kBAAMP,GAAiBY,EAAMf,OAAnF,SAA0F,mBAAGW,MAAM,gBAAgB,cAAY,kCAe3I,eAAC,KAAD,CACIW,KAAM/D,EACNgE,QAAS/D,EACTgE,KAAK,KAHT,UAKI,cAAC,KAAD,CAAcC,aAAW,EAAChB,UAAU,iBAApC,SACA,cAAC,KAAD,8BAEA,cAAC,KAAD,UACA,qBAAKE,MAAM,YAAX,SAEI,sBAAKA,MAAM,MAAX,UAEK,qBAAKA,MAAM,WAAX,SACG,sBAAKA,MAAM,aAAX,UACI,uBAAOA,MAAM,aAAae,IAAI,YAA9B,kBACA,uBAAOR,KAAK,OAAOS,GAAG,OAAOC,KAAK,OAAOjB,MAAM,sBAIvD,qBAAKA,MAAM,WAAX,SACI,sBAAKA,MAAM,aAAX,UACI,uBAAOA,MAAM,aAAae,IAAI,YAA9B,sBACA,uBAAOR,KAAK,SAASS,GAAG,WAAWC,KAAK,WAAWjB,MAAM,iBACzD,uBAAOA,MAAM,aAAae,IAAI,YAA9B,wBACA,uBAAOR,KAAK,WAAWS,GAAG,iBAIlC,qBAAKhB,MAAM,WAAX,SACI,sBAAKA,MAAM,aAAX,UACI,uBAAOA,MAAM,aAAae,IAAI,YAA9B,wBACA,uBAAOR,KAAK,OAAOS,GAAG,aAAaC,KAAK,aAAajB,MAAM,sBAInE,qBAAKA,MAAM,WAAX,SACI,sBAAKA,MAAM,aAAX,UACI,uBAAOA,MAAM,aAAae,IAAI,YAA9B,sBACA,uBAAOR,KAAK,OAAOS,GAAG,WAAWC,KAAK,WAAWjB,MAAM,sBAI/D,qBAAKA,MAAM,WAAX,SACI,sBAAKA,MAAM,aAAX,UACI,uBAAOA,MAAM,aAAae,IAAI,YAA9B,uBACA,uBAAOR,KAAK,SAASS,GAAG,YAAYC,KAAK,YAAYjB,MAAM,sBAInE,qBAAKA,MAAM,WAAX,SACI,sBAAKA,MAAM,aAAX,UACI,uBAAOA,MAAM,aAAae,IAAI,eAA9B,qBACA,wBAAQC,GAAG,UAAUhB,MAAM,eAA3B,SACC1C,EAAQ6C,KAAI,SAAAC,GAAK,OAAK,yBAAQnC,MAAOmC,EAAMf,KAArB,cAA6Be,EAAMK,aAAnC,wBAYvC,cAAC,KAAD,UACI,sBAAKX,UAAU,wBAAf,UACA,cAAC,IAAD,CAASO,MAAM,UAAUN,QAASnC,EAAlC,kBAA+D,IAC/D,cAAC,IAAD,CACAyC,MAAM,YACNN,QAAS,kBAAMlD,GAAW,IAF1B,2BAUR,eAAC,KAAD,CACI8D,KAAM7D,EACN8D,QAAS7D,EACT8D,KAAK,KAHT,UAKI,cAAC,KAAD,CAAcC,aAAW,EAAChB,UAAU,iBAApC,SACA,cAAC,KAAD,8BAEA,cAAC,KAAD,UACA,qBAAKE,MAAM,YAAX,SACI,qBAAKA,MAAQ,MAAb,SAEA,qBAAKA,MAAM,WAAX,SACQ,sBAAKA,MAAM,aAAX,UACI,uBAAOA,MAAM,aAAae,IAAI,YAA9B,kBACA,uBAAOR,KAAK,OAAOS,GAAG,OAAOC,KAAK,OAAOjB,MAAM,4BAU/D,cAAC,KAAD,UACI,sBAAKF,UAAU,wBAAf,UACA,cAAC,IAAD,CAASO,MAAM,UAAUN,QAASnC,EAAlC,kBAA+D,IAC/D,cAAC,IAAD,CACAyC,MAAM,YACNN,QAAS,kBAAMhD,GAAa,IAF5B,2BASR,eAAC,KAAD,CACI4D,KAAM3D,EACN4D,QAAS3D,EACT4D,KAAK,KAHT,UAKI,cAAC,KAAD,CAAcC,aAAW,EAAChB,UAAU,iBAApC,SACA,cAAC,KAAD,MAEA,cAAC,KAAD,UACA,sBAAKE,MAAM,YAAX,UACA,yCACI,sBAAKA,MAAQ,MAAb,UAEA,qBAAKA,MAAM,WAAX,SACQ,sBAAKA,MAAM,aAAX,UACI,uBAAOA,MAAM,aAAae,IAAI,eAA9B,yBACA,wBAAQC,GAAG,kBAAkBhB,MAAM,eAAnC,SACC1C,EAAQ6C,KAAI,SAAAC,GAAK,OAAK,yBAAQnC,MAAOmC,EAAMf,KAArB,cAA6Be,EAAMK,aAAnC,iBAK/B,qBAAKT,MAAM,WAAX,SACI,sBAAKA,MAAM,aAAX,UACI,uBAAOA,MAAM,aAAae,IAAI,eAA9B,8BACA,wBAAQC,GAAG,kBAAkBhB,MAAM,eAAnC,SACC1C,EAAQ6C,KAAI,SAAAC,GAAK,OAAK,yBAAQnC,MAAOmC,EAAMf,KAArB,cAA6Be,EAAMM,cAAnC,yBAYvC,eAAC,KAAD,WACI,cAAC,IAAD,CAASL,MAAM,UAAUN,QAAWd,EAApC,kBAAqE,IACrE,cAAC,IAAD,CACAoB,MAAM,YACNN,QAAS,kBAAM5C,GAAW,IAF1B,yBAOJ,eAAC,KAAD,CACAwD,KAAMzD,EACN0D,QAASzD,EACT0D,KAAK,KAHL,UAKA,cAAC,KAAD,CAAcC,aAAW,EAAChB,UAAU,iBAApC,SACA,cAAC,KAAD,+BAEA,cAAC,KAAD,UACA,qBAAKE,MAAM,YAAX,SAEA,sBAAKA,MAAM,MAAX,UAEI,qBAAKA,MAAM,WAAX,SACI,sBAAKA,MAAM,aAAX,UACI,uBAAOA,MAAM,aAAae,IAAI,eAA9B,oCACA,wBAASC,GAAG,yBAAyBhB,MAAM,eAA3C,SACK1C,EAAQ6C,KAAI,SAAAC,GAAK,OAAK,yBAAQc,aAAe1D,EAAoB0B,gBAAiBjB,MAAOmC,EAAMf,KAAzE,cAAiFe,EAAMe,WAAvF,YAE3B,uBAAOZ,KAAK,SAAStC,MAAOT,EAAoB6B,KAAM2B,GAAI,qBAIlE,qBAAKhB,MAAM,WAAX,SACI,sBAAKA,MAAM,aAAX,UACI,uBAAOA,MAAM,aAAae,IAAI,YAA9B,6BACA,uBAAOR,KAAK,OAAOS,GAAG,wBAAwBE,aAAe1D,EAAoB+B,yBAA0B0B,KAAK,mBAAmBjB,MAAM,6BAOrJ,eAAC,KAAD,WACI,cAAC,IAAD,CAASK,MAAM,UAAUN,QAAWd,EAApC,kBAAqE,IACrE,cAAC,IAAD,CACAoB,MAAM,YACNN,QAAS,kBAAM5C,GAAW,IAF1B","file":"static/js/49.eec02eac.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CContainer,\r\n  CJumbotron,\r\n  CRow,\r\n  CEmbed,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownDivider,\r\n  CDropdownHeader,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CEmbedItem\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\nimport BASE_URL from 'src/views/base'\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\nconsole.log(cookies.get('gym_uuid'))\r\n\r\n\r\nconst Expenses = () => {\r\n\r\n        \r\nconst [modal, setModal] = useState(false)\r\nconst [large, setLarge] = useState(false)\r\nconst [small, setSmall] = useState(false)\r\nconst [primary, setPrimary] = useState(false)\r\nconst [secondary,setsecondary] = useState(false)\r\nconst [Rulesuccess,setRulesuccess] =useState(false)\r\nconst [success, setSuccess] = useState(false)\r\nconst [warning, setWarning] = useState(false)\r\nconst [danger, setDanger] = useState(false)\r\nconst [info, setInfo] = useState(false)\r\n\r\n\r\nconst [getinstructor, setgetinstructor] = useState([])\r\nconst [getuser, setuser] = useState([])\r\nconst [getinstructordetail, setinstructordetail] = useState([])\r\n\r\n\r\nconst axios = require('axios');\r\n\r\nuseEffect(() => {\r\n    axios\r\n    .get(BASE_URL + 'payments/promocodes/')\r\n    .then(res => {\r\n        console.log(res)\r\n        setgetinstructor(res.data)\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}, [])\r\n\r\n\r\nuseEffect(() => {\r\n    axios\r\n      .get(BASE_URL + 'payments/rulesets')\r\n      .then(res => {\r\n        console.log(res)\r\n        setuser(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n\r\n\r\n  function Clicker(uuid) {\r\n      // alert(uuid);\r\n      setSuccess(!success);\r\n      //  debugger\r\n      axios\r\n        .get(BASE_URL + 'gymprofile/instructor/' + uuid)\r\n        .then(getuuid => {\r\n          console.log(getuuid);\r\n          setinstructordetail(getuuid.data);\r\n        })\r\n  \r\n    }\r\n    \r\n    function Clicker2(uuid) {\r\n        // alert(uuid);\r\n        setRulesuccess(!Rulesuccess);\r\n        //  debugger\r\n        axios\r\n          .get(BASE_URL + 'gymprofile/instructor/' + uuid)\r\n          .then(getuuid => {\r\n            console.log(getuuid);\r\n            setinstructordetail(getuuid.data);\r\n          })\r\n    \r\n      }\r\n\r\n\r\nasync function NewPromocode() {\r\n    // setSuccess(false);\r\n   \r\n     debugger\r\n    var code = document.getElementById('code').value;\r\n    var discount = document.getElementById('discount').value;\r\n    var start_date = document.getElementById('start_date').value;\r\n    var end_date = document.getElementById('end_date').value;\r\n    var max_usage = document.getElementById('max_usage').value;\r\n    var ruleset = document.getElementById('ruleset').value;  \r\n   \r\n    {  \r\n        console.log('Trying to send request');\r\n        \r\n        try {\r\n            let loader = `<div><div class=\"loader centered\"/></div>`;\r\n            // document.getElementById('reg').innerHTML = loader;\r\n            console.log('Trying');\r\n            let res = await axios.post(BASE_URL + 'payments/promocodes/', {\r\n                code:code,\r\n                discount:discount,\r\n                start_date:start_date,\r\n                end_date:end_date,\r\n                max_usage:max_usage,\r\n                ruleset:ruleset,          \r\n            });\r\n            if (res.status === 201) {\r\n                //  debugger\r\n\r\n                console.log(res.status);\r\n                console.log(res.data);\r\n\r\n                window.location.reload();\r\n               \r\n  \r\n            }\r\n            //  debugger\r\n    \r\n            return res.data\r\n        }\r\n        catch (err) {\r\n            console.error('Signup Failed , Please try again.');\r\n            window.location.reload();\r\n            alert(err);\r\n        }\r\n    }\r\n}\r\n\r\nasync function UpdateInstructor() {\r\n    // setSuccess(false);\r\n   \r\n    //  debugger\r\n    // var form = document.forms[\"regform\"][\"email\"].value;   \r\n    var instructor_info = document.getElementById(\"update_instructor_info\").value;\r\n    var specialization = document.getElementById(\"update_specialization\").value;\r\n    var gym = cookies.get('gym_uuid')\r\n    var uuid = document.getElementById(\"update_uuid\").value;\r\n    \r\n    \r\n    {  \r\n       \r\n        console.log('Trying to send request');\r\n        \r\n        try {\r\n            let loader = `<div><div class=\"loader centered\"/></div>`;\r\n            // document.getElementById('reg').innerHTML = loader;\r\n            console.log('Trying');\r\n            let res = await axios.patch(BASE_URL + 'gymprofile/instructor/' + uuid +'/', {\r\n            \r\n                instructor_info:instructor_info,\r\n                instructor_specializaton:specialization,\r\n                gym:gym\r\n            });\r\n            if (res.status === 200) {\r\n                //  debugger\r\n                // test for status you want, etc\r\n                console.log(res.status);\r\n                console.log(res.data);\r\n                // alert(res.data.message);\r\n  \r\n                window.location.reload();\r\n            }\r\n            //  debugger\r\n            // Don't forget to return something\r\n            return res.data\r\n        }\r\n        catch (err) {\r\n            console.error('Signup Failed , Please try again.');\r\n            window.location.reload();\r\n            alert(err);\r\n        }\r\n    }\r\n}\r\n\r\nasync function deleteInstructor(uuid) {\r\n    // setSuccess(false);\r\n   console.log(uuid)\r\n    \r\n    {  \r\n       \r\n        console.log('Trying to send request');\r\n        \r\n        try {\r\n            let loader = `<div><div class=\"loader centered\"/></div>`;\r\n            // document.getElementById('reg').innerHTML = loader;\r\n            console.log('Trying');\r\n            let res = await axios.delete(BASE_URL + 'gymprofile/instructor/' + uuid +'/', {\r\n            \r\n                uuid:uuid\r\n            });\r\n            if (res.status === 200) {\r\n                //  debugger\r\n                // test for status you want, etc\r\n                console.log(res.status);\r\n                console.log(res.data);\r\n                // alert(res.data.message);\r\n  \r\n                window.location.reload();\r\n            }\r\n            //  debugger\r\n            // Don't forget to return something\r\n            return res.data\r\n        }\r\n        catch (err) {\r\n            console.error('Signup Failed , Please try again.');\r\n            window.location.reload();\r\n            alert(err);\r\n        }\r\n    }\r\n}\r\n\r\n\r\n  return (\r\n    <>\r\n    \r\n    <h3>Promocodes</h3>\r\n        <CRow>\r\n      <div className=\"col-md-12\">\r\n              <div className=\"manage_top_btn\">\r\n              <div className=\"manage-btn-left\">\r\n                  \r\n                  <button className=\"mn_btn_1 mr-1\" onClick={() => setPrimary(!primary)}> <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i> Add Promocode </button>\r\n                 \r\n                 \r\n                </div> \r\n                \r\n\r\n              </div>\r\n              \r\n          </div>\r\n        <CCol xs=\"12\" lg=\"12\">\r\n            \r\n          <CCard>\r\n         \r\n          <div className=\"col-md-12\">\r\n          <div className=\"manage-table-main\">\r\n                <table class=\"table\">\r\n            <thead>\r\n            <tr>\r\n                \r\n                <th>Code</th>\r\n                <th>Discount</th>\r\n                <th>Start Date</th>\r\n                <th>End Date</th>\r\n                <th>Action</th>\r\n                {/* <th  class=\"text-center\">Frequency</th> */}\r\n                {/* <th  class=\"text-center\">Active/InActive</th> */}\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {getinstructor.map(store => (\r\n            <tr>\r\n\r\n                <td>{store.code}</td>\r\n                <td>{store.discount}</td>\r\n                <td>{store.start_date}</td>\r\n                <td>{store.end_date}</td>\r\n                {/* <td  class=\"text-center\">{store.frequency}</td> */}\r\n               \r\n                <td>\r\n                <CButton color=\"primary\" onClick={() => Clicker(store.uuid)}>Manage</CButton>{' '}\r\n                {/* <a href ='#/base/bookings'><button class=\"btn btn-primary user-bookings\">Bookings</button></a> */}\r\n                <button type=\"button\" class=\"btn btn-danger\" onClick={() => deleteInstructor(store.uuid)}><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button> \r\n                </td>\r\n            </tr>\r\n            ))}\r\n\r\n        </tbody>\r\n        </table>\r\n\r\n    </div>\r\n        </div>\r\n\r\n        \r\n          </CCard>\r\n        </CCol>\r\n       \r\n      </CRow>\r\n\r\n    <h3>Rulesets</h3>\r\n\r\n      <CRow>\r\n      <div className=\"col-md-12\">\r\n              <div className=\"manage_top_btn\">\r\n              <div className=\"manage-btn-left\">\r\n                  \r\n                  <a href='#/base/Ruleset'><button className=\"mn_btn_1 mr-1\" onClick='#/base/Ruleset'> <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i> Add Ruleset </button></a>\r\n                 \r\n                 \r\n                </div> \r\n                \r\n\r\n              </div>\r\n              \r\n          </div>\r\n      <CCol xs=\"12\" lg=\"12\">\r\n        \r\n          <CCard>\r\n         \r\n          <div className=\"col-md-12\">\r\n         \r\n                <table class=\"table\">\r\n            <thead>\r\n            <tr>\r\n                \r\n                <th>Ruleset</th>\r\n                <th>Max Usage/User</th>\r\n                <th>Action</th>\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {getuser.map(store => (\r\n            <tr>\r\n\r\n                {store.gyms_ruleset==''?<td>All gyms</td>:<td>{store.gyms_ruleset}</td>}\r\n                <td>{store.max_uses_rule}</td>\r\n               \r\n                <td>\r\n                <CButton color=\"primary\" onClick={() => Clicker2(store.uuid)}>Manage</CButton>{' '}\r\n                {/* <a href ='#/base/bookings'><button class=\"btn btn-primary user-bookings\">Bookings</button></a> */}\r\n                <button type=\"button\" class=\"btn btn-danger\" onClick={() => deleteInstructor(store.uuid)}><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button> \r\n                </td>\r\n            </tr>\r\n            ))}\r\n\r\n        </tbody>\r\n        </table>\r\n\r\n        </div>\r\n\r\n        \r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n    <CModal \r\n        show={primary} \r\n        onClose={setPrimary}\r\n        size=\"lg\"\r\n        >\r\n        <CModalHeader closeButton className=\"add-user-modal\">\r\n        <CModalTitle>Add Promocode</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n        <div class=\"col-md-12\">\r\n            \r\n            <div class=\"row\">\r\n\r\n                 <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"date_paid\">Code</label>\r\n                        <input type=\"text\" id=\"code\" name=\"code\" class=\"form-control\"  />\r\n                </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"date_paid\">Discount</label>\r\n                        <input type='number' id=\"discount\" name=\"discount\" class=\"form-control\"  />\r\n                        <label class=\"form-label\" for=\"date_paid\">Is Percent</label>\r\n                        <input type='checkbox' id='is_perc' />\r\n                </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"date_paid\">Start Date</label>\r\n                        <input type=\"date\" id=\"start_date\" name=\"start_date\" class=\"form-control\"  />\r\n                </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"date_paid\">End date</label>\r\n                        <input type=\"date\" id=\"end_date\" name=\"end_date\" class=\"form-control\"  />\r\n                </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"date_paid\">Max Usage</label>\r\n                        <input type=\"number\" id=\"max_usage\" name=\"max_usage\" class=\"form-control\"  />\r\n                </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"expense_name\">Ruleset</label>\r\n                        <select id='ruleset' class=\"form-control\"> \r\n                        {getuser.map(store => (<option value={store.uuid}> {store.gyms_ruleset} </option>))}\r\n                        </select>\r\n                </div> \r\n                </div>\r\n\r\n\r\n\r\n        </div>\r\n\r\n        </div>\r\n        \r\n        </CModalBody>\r\n        <CModalFooter>\r\n            <div className=\"col-md-12 text-center\">\r\n            <CButton color=\"primary\" onClick={NewPromocode}>Save</CButton>{' '}\r\n            <CButton \r\n            color=\"secondary\" \r\n            onClick={() => setPrimary(false)}\r\n            >Close</CButton>\r\n            </div>\r\n           \r\n        </CModalFooter>\r\n    </CModal>\r\n\r\n\r\n    <CModal \r\n        show={secondary} \r\n        onClose={setsecondary}\r\n        size=\"lg\"\r\n        >\r\n        <CModalHeader closeButton className=\"add-user-modal\">\r\n        <CModalTitle>Add Promocode</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n        <div class=\"col-md-12\">\r\n            <div class = \"row\">\r\n\r\n            <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"date_paid\">Code</label>\r\n                        <input type=\"text\" id=\"code\" name=\"code\" class=\"form-control\"  />\r\n                </div>\r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n        </div>\r\n        \r\n        </CModalBody>\r\n        <CModalFooter>\r\n            <div className=\"col-md-12 text-center\">\r\n            <CButton color=\"primary\" onClick={NewPromocode}>Save</CButton>{' '}\r\n            <CButton \r\n            color=\"secondary\" \r\n            onClick={() => setsecondary(false)}\r\n            >Close</CButton>\r\n            </div>\r\n           \r\n        </CModalFooter>\r\n    </CModal>\r\n\r\n    <CModal \r\n        show={Rulesuccess} \r\n        onClose={setRulesuccess}\r\n        size=\"lg\"\r\n        >\r\n        <CModalHeader closeButton className=\"add-user-modal\">\r\n        <CModalTitle></CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n        <div class=\"card-body\">\r\n        <h3>Ruleset</h3>\r\n            <div class = \"row\">\r\n\r\n            <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"expense_name\">Gym Ruleset</label>\r\n                        <select id='instructor_name' class=\"form-control\"> \r\n                        {getuser.map(store => (<option value={store.uuid}> {store.gyms_ruleset} </option>))}\r\n                        </select>\r\n                </div> \r\n                </div>\r\n            \r\n                <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"expense_name\">Max Usage / User</label>\r\n                        <select id='instructor_name' class=\"form-control\"> \r\n                        {getuser.map(store => (<option value={store.uuid}> {store.max_uses_rule} </option>))}\r\n                        </select>\r\n                </div> \r\n                </div>\r\n\r\n\r\n\r\n            </div>\r\n    \r\n       </div>\r\n        \r\n        </CModalBody>\r\n        <CModalFooter>\r\n            <CButton color=\"primary\" onClick = {UpdateInstructor}>Save</CButton>{' '}\r\n            <CButton \r\n            color=\"secondary\" \r\n            onClick={() => setSuccess(false)}\r\n            >Close</CButton>\r\n        </CModalFooter>\r\n        </CModal>\r\n    \r\n        <CModal \r\n        show={success} \r\n        onClose={setSuccess}\r\n        size=\"lg\"\r\n        >\r\n        <CModalHeader closeButton className=\"add-user-modal\">\r\n        <CModalTitle>Update Expense</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n        <div class=\"card-body\">\r\n    \r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-sm-6\" >\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-label\" for=\"expense_name\">Name of the instructor</label>\r\n                    <select  id='update_instructor_info' class=\"form-control\"> \r\n                        {getuser.map(store => (<option defaultValue= {getinstructordetail.instructor_info} value={store.uuid}> {store.first_name} </option>))}\r\n                        </select>\r\n                    <input type='hidden' value={getinstructordetail.uuid} id ='update_uuid'/>\r\n            </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-6\" >\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-label\" for=\"date_paid\">Specialization </label>\r\n                    <input type=\"text\" id=\"update_specialization\" defaultValue= {getinstructordetail.instructor_specializaton} name=\"update_date_paid\" class=\"form-control\"  />\r\n            </div>\r\n            </div>\r\n        </div>\r\n        </div>\r\n        \r\n        </CModalBody>\r\n        <CModalFooter>\r\n            <CButton color=\"primary\" onClick = {UpdateInstructor}>Save</CButton>{' '}\r\n            <CButton \r\n            color=\"secondary\" \r\n            onClick={() => setSuccess(false)}\r\n            >Close</CButton>\r\n        </CModalFooter>\r\n        </CModal>\r\n\r\n    </>\r\n  )\r\n}\r\n\r\nexport default Expenses\r\n"],"sourceRoot":""}