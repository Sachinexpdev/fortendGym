{"version":3,"sources":["views/base/Expenses/Expenses.js"],"names":["cookies","Cookies","console","log","get","Expenses","useState","primary","setPrimary","success","setSuccess","getexpense","setgetexpense","getuser","setuser","axios","require","useEffect","BASE_URL","then","res","data","catch","err","getexpensedetail","setgetexpensedetail","a","expense_name","document","getElementById","value","date_paid","expense_amount","transact_by","frequency","gym","post","transaction_reason","transaction_amount","status","window","location","reload","error","alert","uuid","patch","delete","includes","className","onClick","class","xs","lg","map","store","color","getuuid","type","deletePackage","show","onClose","size","closeButton","for","id","name","first_name","defaultValue","href"],"mappings":"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","file":"static/js/34.810e53a8.chunk.js","sourcesContent":["import React, { useState,useEffect } from 'react'\r\nimport {\r\n  CButton,\r\n  CCard,\r\n  CCardBody,\r\n  CCardHeader,\r\n  CCol,\r\n  CContainer,\r\n  CJumbotron,\r\n  CRow,\r\n  CEmbed,\r\n  CDropdown,\r\n  CDropdownToggle,\r\n  CDropdownDivider,\r\n  CDropdownHeader,\r\n  CModal,\r\n  CModalBody,\r\n  CModalFooter,\r\n  CModalHeader,\r\n  CModalTitle,\r\n  CDropdownItem,\r\n  CDropdownMenu,\r\n  CEmbedItem\r\n} from '@coreui/react'\r\nimport { DocsLink } from 'src/reusable'\r\nimport BASE_URL from 'src/views/base'\r\nimport Cookies from 'universal-cookie';\r\n\r\nconst cookies = new Cookies();\r\nconsole.log(cookies.get('gym_uuid'))\r\n\r\n\r\nconst Expenses = () => {\r\n\r\n        \r\nconst [modal, setModal] = useState(false)\r\nconst [large, setLarge] = useState(false)\r\nconst [small, setSmall] = useState(false)\r\nconst [primary, setPrimary] = useState(false)\r\nconst [success, setSuccess] = useState(false)\r\nconst [warning, setWarning] = useState(false)\r\nconst [danger, setDanger] = useState(false)\r\nconst [info, setInfo] = useState(false)\r\n\r\n\r\nconst [getexpense, setgetexpense] = useState([])\r\nconst [getuser, setuser] = useState([])\r\n\r\nconst axios = require('axios');\r\n\r\nuseEffect(() => {\r\n    axios\r\n    .get(BASE_URL + 'gymprofile/expense/?gym='+cookies.get('gym_uuid'))\r\n    .then(res => {\r\n        console.log(res)\r\n        setgetexpense(res.data)\r\n    })\r\n    .catch(err => {\r\n        console.log(err)\r\n    })\r\n}, [])\r\n\r\n\r\nuseEffect(() => {\r\n    axios\r\n      .get(BASE_URL + 'user/?gym_id=' + cookies.get('gym_uuid'))\r\n      .then(res => {\r\n        console.log(res)\r\n        setuser(res.data)\r\n      })\r\n      .catch(err => {\r\n        console.log(err)\r\n      })\r\n  }, [])\r\n\r\n\r\n  const [getexpensedetail, setgetexpensedetail] = useState([\"ffgyu\",\"fghj\"])\r\n\r\n  function Clicker(uuid) {\r\n      // alert(uuid);\r\n      setSuccess(!success);\r\n      //  debugger\r\n      axios\r\n        .get(BASE_URL + 'gymprofile/expense/' + uuid)\r\n        .then(getuuid => {\r\n          console.log(getuuid);\r\n          setgetexpensedetail(getuuid.data);\r\n        })\r\n  \r\n    }\r\n\r\n\r\nasync function NewExpense() {\r\n    // setSuccess(false);\r\n   \r\n    //  debugger\r\n    // var form = document.forms[\"regform\"][\"email\"].value;   \r\n    var expense_name = document.getElementById(\"expense_name\").value;\r\n    var date_paid = document.getElementById(\"date_paid\").value;\r\n    var expense_amount = document.getElementById(\"expense_amount\").value;\r\n    var transact_by = document.getElementById(\"transact_by\").value;\r\n    var frequency = document.getElementById(\"frequency\").value;\r\n    var gym = cookies.get('gym_uuid')\r\n    {  \r\n        console.log('Trying to send request');\r\n        \r\n        try {\r\n            let loader = `<div><div class=\"loader centered\"/></div>`;\r\n            // document.getElementById('reg').innerHTML = loader;\r\n            console.log('Trying');\r\n            let res = await axios.post(BASE_URL + 'gymprofile/expense/', {\r\n            \r\n                transaction_reason:expense_name,\r\n                date_paid:date_paid,\r\n                transaction_amount:expense_amount,\r\n                transact_by:transact_by,\r\n                frequency:frequency,\r\n                gym:gym\r\n            });\r\n            if (res.status === 200) {\r\n                //  debugger\r\n                // test for status you want, etc\r\n                console.log(res.status);\r\n                console.log(res.data);\r\n                // alert(res.data.message);\r\n  \r\n                window.location.reload();\r\n               \r\n  \r\n            }\r\n            //  debugger\r\n            // Don't forget to return something\r\n            return res.data\r\n        }\r\n        catch (err) {\r\n            console.error('Signup Failed , Please try again.');\r\n            window.location.reload();\r\n            alert(err);\r\n        }\r\n    }\r\n}\r\n\r\nasync function UpdateExpense() {\r\n    // setSuccess(false);\r\n   \r\n    //  debugger\r\n    // var form = document.forms[\"regform\"][\"email\"].value;   \r\n    var expense_name = document.getElementById(\"update_expense_name\").value;\r\n    var date_paid = document.getElementById(\"update_date_paid\").value;\r\n    var expense_amount = document.getElementById(\"update_expense_amount\").value;\r\n    var transact_by = document.getElementById(\"update_transact_by\").value;\r\n    var frequency = document.getElementById(\"update_frequency\").value;\r\n    var uuid = document.getElementById(\"update_uuid\").value;\r\n    var gym = cookies.get('gym_uuid')\r\n    \r\n    \r\n    {  \r\n       \r\n        console.log('Trying to send request');\r\n        \r\n        try {\r\n            let loader = `<div><div class=\"loader centered\"/></div>`;\r\n            // document.getElementById('reg').innerHTML = loader;\r\n            console.log('Trying');\r\n            let res = await axios.patch(BASE_URL + 'gymprofile/expense/' + uuid +'/', {\r\n            \r\n                transaction_reason:expense_name,\r\n                date_paid:date_paid,\r\n                transaction_amount:expense_amount,\r\n                transact_by:transact_by,\r\n                frequency:frequency,\r\n                gym:gym\r\n            });\r\n            if (res.status === 200) {\r\n                //  debugger\r\n                // test for status you want, etc\r\n                console.log(res.status);\r\n                console.log(res.data);\r\n                // alert(res.data.message);\r\n  \r\n                window.location.reload();\r\n            }\r\n            //  debugger\r\n            // Don't forget to return something\r\n            return res.data\r\n        }\r\n        catch (err) {\r\n            console.error('Signup Failed , Please try again.');\r\n            window.location.reload();\r\n            alert(err);\r\n        }\r\n    }\r\n}\r\n\r\nasync function deletePackage(uuid) {\r\n    // setSuccess(false);\r\n   console.log(uuid)\r\n    \r\n    {  \r\n       \r\n        console.log('Trying to send request');\r\n        \r\n        try {\r\n            let loader = `<div><div class=\"loader centered\"/></div>`;\r\n            // document.getElementById('reg').innerHTML = loader;\r\n            console.log('Trying');\r\n            let res = await axios.delete(BASE_URL + 'gymprofile/expense/' + uuid +'/', {\r\n            \r\n                uuid:uuid\r\n            });\r\n            if (res.status === 200) {\r\n                //  debugger\r\n                // test for status you want, etc\r\n                console.log(res.status);\r\n                console.log(res.data);\r\n                // alert(res.data.message);\r\n  \r\n                window.location.reload();\r\n            }\r\n            //  debugger\r\n            // Don't forget to return something\r\n            return res.data\r\n        }\r\n        catch (err) {\r\n            console.error('Signup Failed , Please try again.');\r\n            window.location.reload();\r\n            alert(err);\r\n        }\r\n    }\r\n}\r\n\r\nvar perm = cookies.get('perms')\r\n\r\n  if (perm.includes('Expenses')){\r\n\r\n  return (\r\n    <>\r\n   \r\n        <CRow>\r\n      <div className=\"col-md-12\">\r\n              <div className=\"manage_top_btn\">\r\n              <div className=\"manage-btn-left\">\r\n                  \r\n                  <button className=\"mn_btn_1 mr-1\" onClick={() => setPrimary(!primary)}> <i class=\"fa fa-plus-circle\" aria-hidden=\"true\"></i> Add Expenses </button>\r\n                </div> \r\n                \r\n\r\n              </div>\r\n              \r\n          </div>\r\n        <CCol xs=\"12\" lg=\"12\">\r\n          <CCard>\r\n         \r\n          <div className=\"col-md-12\">\r\n          <div className=\"manage-table-main\">\r\n                <table class=\"table\">\r\n            <thead>\r\n            <tr>\r\n                \r\n                <th>Name Expenses</th>\r\n                <th>Date Paid</th>\r\n                <th>Amount</th>\r\n                <th>Frequency</th>\r\n                <th>Action</th>\r\n                {/* <th  class=\"text-center\">Frequency</th> */}\r\n                {/* <th  class=\"text-center\">Active/InActive</th> */}\r\n            </tr>\r\n            </thead>\r\n            <tbody>\r\n            {getexpense.map(store => (\r\n            <tr>\r\n\r\n                <td>{store.transaction_reason}</td>\r\n                <td>{store.date_paid}</td>\r\n                <td>{store.transaction_amount}</td>\r\n                <td>{store.frequency}</td>\r\n                {/* <td  class=\"text-center\">{store.frequency}</td> */}\r\n                {/* <td class=\"text-center\">\r\n                <label class=\"switch\">\r\n                <input type=\"checkbox\" />\r\n                <span class=\"slider round\"></span>\r\n                </label>\r\n                </td> */}\r\n                <td>\r\n                <CButton color=\"primary\" onClick={() => Clicker(store.uuid)}>Manage</CButton>{' '}\r\n                <button type=\"button\" class=\"btn btn-danger\" onClick={() => deletePackage(store.uuid)}><i class=\"fa fa-trash-o\" aria-hidden=\"true\"></i></button> \r\n                </td>\r\n\r\n            </tr>\r\n            ))}\r\n\r\n        </tbody>\r\n        </table>\r\n\r\n    </div>\r\n        </div>\r\n\r\n        \r\n          </CCard>\r\n        </CCol>\r\n      </CRow>\r\n\r\n    <CModal \r\n        show={primary} \r\n        onClose={setPrimary}\r\n        size=\"lg\"\r\n        >\r\n        <CModalHeader closeButton className=\"add-user-modal\">\r\n        <CModalTitle>Add Expenses</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n        <div class=\"col-md-12\">\r\n            <div class=\"row\">\r\n\r\n                <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"expense_name\">Name of the expenses</label>\r\n                        <input type=\"text\" id=\"expense_name\" name=\"expense_name\" class=\"form-control\" />\r\n                </div>\r\n                </div>\r\n\r\n                 <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"date_paid\">Date Paid </label>\r\n                        <input type=\"date\" id=\"date_paid\" name=\"date_paid\" class=\"form-control\"  />\r\n                </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"expense_amount\">Amount </label>\r\n                        <input type=\"text\" id=\"expense_amount\" name=\"expense_amount\" class=\"form-control\"  />\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"transact_by\">Transact By </label>\r\n                        <select id='transact_by' class=\"form-control\"> \r\n                        {getuser.map(store => (<option value={store.uuid}> {store.first_name} </option>))}\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n                <div class=\"col-sm-6\" >\r\n                    <div class=\"form-group\">\r\n                        <label class=\"form-label\" for=\"transact_by\">Frequency </label>\r\n                        <select id='frequency' class=\"form-control\"> \r\n                        <option>Monthly</option>\r\n                        <option>Quaterly</option>\r\n                        <option>Yearly</option>\r\n                        <option>One Time</option>\r\n                        </select>\r\n                    </div>\r\n                </div>\r\n\r\n               \r\n\r\n        </div>\r\n\r\n        </div>\r\n        \r\n        </CModalBody>\r\n        <CModalFooter>\r\n            <div className=\"col-md-12 text-center\">\r\n            <CButton color=\"primary\" onClick={NewExpense}>Save</CButton>{' '}\r\n            <CButton \r\n            color=\"secondary\" \r\n            onClick={() => setPrimary(false)}\r\n            >Close</CButton>\r\n            </div>\r\n           \r\n        </CModalFooter>\r\n        </CModal>\r\n\r\n    <CModal \r\n        show={success} \r\n        onClose={setSuccess}\r\n        size=\"lg\"\r\n        >\r\n        <CModalHeader closeButton className=\"add-user-modal\">\r\n        <CModalTitle>Update Expense</CModalTitle>\r\n        </CModalHeader>\r\n        <CModalBody>\r\n        <div class=\"card-body\">\r\n    \r\n        <div class=\"row\">\r\n\r\n            <div class=\"col-sm-6\" >\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-label\" for=\"expense_name\">Name of the expenses</label>\r\n                    <input type=\"text\" defaultValue= {getexpensedetail.transaction_reason} id=\"update_expense_name\" name=\"udpate_expense_name\" class=\"form-control\" />\r\n                    <input type='hidden' value={getexpensedetail.uuid} id ='update_uuid'/>\r\n            </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-6\" >\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-label\" for=\"date_paid\">Date Paid </label>\r\n                    <input type=\"date\" id=\"update_date_paid\" defaultValue= {getexpensedetail.date_paid} name=\"update_date_paid\" class=\"form-control\"  />\r\n            </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-6\" >\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-label\" for=\"expense_amount\">Amount </label>\r\n                    <input type=\"text\" id=\"update_expense_amount\" defaultValue= {getexpensedetail.transaction_amount} name=\"update_expense_amount\" class=\"form-control\"  />\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-6\" >\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-label\" for=\"transact_by\">Transact By </label>\r\n                    <select id='update_transact_by' defaultValue= {getexpensedetail.transact_by} class=\"form-control\"> \r\n                    {getuser.map(store => (<option value={store.uuid}> {store.first_name} </option>))}\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n            <div class=\"col-sm-6\" >\r\n                <div class=\"form-group\">\r\n                    <label class=\"form-label\" for=\"transact_by\">Frequency </label>\r\n                    <select id='update_frequency' class=\"form-control\"> \r\n                    <option>Monthly</option>\r\n                    <option>Quaterly</option>\r\n                    <option>Yearly</option>\r\n                    <option>One Time</option>\r\n                    </select>\r\n                </div>\r\n            </div>\r\n\r\n        </div>\r\n        </div>\r\n        \r\n        </CModalBody>\r\n        <CModalFooter>\r\n            <CButton color=\"primary\" onClick = {UpdateExpense}>Save</CButton>{' '}\r\n            <CButton \r\n            color=\"secondary\" \r\n            onClick={() => setSuccess(false)}\r\n            >Close</CButton>\r\n        </CModalFooter>\r\n        </CModal>\r\n\r\n    </>\r\n  )}\r\n  else{\r\n    return window.location.href='#/dashboard'\r\n  }\r\n\r\n}\r\n\r\nexport default Expenses\r\n"],"sourceRoot":""}